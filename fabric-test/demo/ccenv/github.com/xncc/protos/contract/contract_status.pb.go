// Code generated by protoc-gen-go.
// source: contract/contract_status.proto
// DO NOT EDIT!

package contract

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/xncc/protos/common"
import protos2 "github.com/xncc/protos/configuration"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 订单状态
type ContractStatus struct {
	CurrentStep    *protos2.ContractStep    `protobuf:"bytes,1,opt,name=current_step,json=currentStep" json:"current_step,omitempty"`
	CheckDatas     []*CheckData             `protobuf:"bytes,2,rep,name=check_datas,json=checkDatas" json:"check_datas,omitempty"`
	CheckFlowDatas []*ContractCheckFlowData `protobuf:"bytes,3,rep,name=check_flow_datas,json=checkFlowDatas" json:"check_flow_datas,omitempty"`
}

func (m *ContractStatus) Reset()                    { *m = ContractStatus{} }
func (m *ContractStatus) String() string            { return proto.CompactTextString(m) }
func (*ContractStatus) ProtoMessage()               {}
func (*ContractStatus) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *ContractStatus) GetCurrentStep() *protos2.ContractStep {
	if m != nil {
		return m.CurrentStep
	}
	return nil
}

func (m *ContractStatus) GetCheckDatas() []*CheckData {
	if m != nil {
		return m.CheckDatas
	}
	return nil
}

func (m *ContractStatus) GetCheckFlowDatas() []*ContractCheckFlowData {
	if m != nil {
		return m.CheckFlowDatas
	}
	return nil
}

// 订单审核流程信息
type ContractCheckFlowInfo struct {
	ContractStep   *protos2.ContractStep  `protobuf:"bytes,1,opt,name=contract_step,json=contractStep" json:"contract_step,omitempty"`
	CheckFlowDatas *ContractCheckFlowData `protobuf:"bytes,2,opt,name=check_flow_datas,json=checkFlowDatas" json:"check_flow_datas,omitempty"`
}

func (m *ContractCheckFlowInfo) Reset()                    { *m = ContractCheckFlowInfo{} }
func (m *ContractCheckFlowInfo) String() string            { return proto.CompactTextString(m) }
func (*ContractCheckFlowInfo) ProtoMessage()               {}
func (*ContractCheckFlowInfo) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *ContractCheckFlowInfo) GetContractStep() *protos2.ContractStep {
	if m != nil {
		return m.ContractStep
	}
	return nil
}

func (m *ContractCheckFlowInfo) GetCheckFlowDatas() *ContractCheckFlowData {
	if m != nil {
		return m.CheckFlowDatas
	}
	return nil
}

// 订单审核流程数据
type ContractCheckFlowData struct {
	CheckApp        string `protobuf:"bytes,1,opt,name=check_app,json=checkApp" json:"check_app,omitempty"`
	CheckUserName   string `protobuf:"bytes,2,opt,name=check_user_name,json=checkUserName" json:"check_user_name,omitempty"`
	CheckUserMobile string `protobuf:"bytes,3,opt,name=check_user_mobile,json=checkUserMobile" json:"check_user_mobile,omitempty"`
	CheckTime       int64  `protobuf:"varint,4,opt,name=check_time,json=checkTime" json:"check_time,omitempty"`
	CheckIp         string `protobuf:"bytes,5,opt,name=check_ip,json=checkIp" json:"check_ip,omitempty"`
	CheckRecord     string `protobuf:"bytes,6,opt,name=check_record,json=checkRecord" json:"check_record,omitempty"`
	CheckRemark     string `protobuf:"bytes,7,opt,name=check_remark,json=checkRemark" json:"check_remark,omitempty"`
}

func (m *ContractCheckFlowData) Reset()                    { *m = ContractCheckFlowData{} }
func (m *ContractCheckFlowData) String() string            { return proto.CompactTextString(m) }
func (*ContractCheckFlowData) ProtoMessage()               {}
func (*ContractCheckFlowData) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

// 具体阶段的检查确认项
type ContractStepCheckData struct {
	CurrentStep *protos2.ContractStep `protobuf:"bytes,1,opt,name=current_step,json=currentStep" json:"current_step,omitempty"`
	CheckDatas  []*CheckData          `protobuf:"bytes,2,rep,name=check_datas,json=checkDatas" json:"check_datas,omitempty"`
}

func (m *ContractStepCheckData) Reset()                    { *m = ContractStepCheckData{} }
func (m *ContractStepCheckData) String() string            { return proto.CompactTextString(m) }
func (*ContractStepCheckData) ProtoMessage()               {}
func (*ContractStepCheckData) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{3} }

func (m *ContractStepCheckData) GetCurrentStep() *protos2.ContractStep {
	if m != nil {
		return m.CurrentStep
	}
	return nil
}

func (m *ContractStepCheckData) GetCheckDatas() []*CheckData {
	if m != nil {
		return m.CheckDatas
	}
	return nil
}

// 检查项的内容
type CheckData struct {
	Title     string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Value     string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	CheckTime int64  `protobuf:"varint,3,opt,name=checkTime" json:"checkTime,omitempty"`
}

func (m *CheckData) Reset()                    { *m = CheckData{} }
func (m *CheckData) String() string            { return proto.CompactTextString(m) }
func (*CheckData) ProtoMessage()               {}
func (*CheckData) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{4} }

func init() {
	proto.RegisterType((*ContractStatus)(nil), "protos.ContractStatus")
	proto.RegisterType((*ContractCheckFlowInfo)(nil), "protos.ContractCheckFlowInfo")
	proto.RegisterType((*ContractCheckFlowData)(nil), "protos.ContractCheckFlowData")
	proto.RegisterType((*ContractStepCheckData)(nil), "protos.ContractStepCheckData")
	proto.RegisterType((*CheckData)(nil), "protos.CheckData")
}

func init() { proto.RegisterFile("contract/contract_status.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 472 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x53, 0xc1, 0x6e, 0x13, 0x31,
	0x10, 0xd5, 0x26, 0xb4, 0x25, 0x93, 0xb4, 0xa5, 0x6e, 0x91, 0x96, 0x42, 0x69, 0xc8, 0x01, 0x45,
	0x1c, 0x36, 0x52, 0x38, 0x20, 0x8e, 0x14, 0x04, 0xea, 0x01, 0x90, 0x16, 0x2a, 0x24, 0x2e, 0x2b,
	0xc7, 0x71, 0x52, 0xab, 0x6b, 0x7b, 0x65, 0x7b, 0xd9, 0x7e, 0x00, 0x07, 0xfe, 0x81, 0xff, 0xe1,
	0xbb, 0xd0, 0xce, 0x64, 0x93, 0x05, 0x2a, 0x21, 0x2e, 0x9c, 0xec, 0x99, 0x79, 0x6f, 0xe6, 0xf9,
	0xd9, 0x86, 0x87, 0xc2, 0x9a, 0xe0, 0xb8, 0x08, 0x93, 0x66, 0x93, 0xf9, 0xc0, 0x43, 0xe9, 0x93,
	0xc2, 0xd9, 0x60, 0xd9, 0x36, 0x2e, 0xfe, 0xf8, 0x50, 0x58, 0xad, 0xad, 0x99, 0xd0, 0x42, 0xc5,
	0xe3, 0xa1, 0xb0, 0x66, 0xa1, 0x96, 0xa5, 0xe3, 0x41, 0x61, 0x8d, 0x3a, 0x2c, 0x72, 0x5b, 0x11,
	0x62, 0xf4, 0x23, 0x82, 0xbd, 0x97, 0xab, 0xf4, 0x07, 0xec, 0xcb, 0x9e, 0xc1, 0x40, 0x94, 0xce,
	0x49, 0x53, 0x4f, 0x92, 0x45, 0x1c, 0x0d, 0xa3, 0x71, 0x7f, 0x7a, 0x44, 0x04, 0x9f, 0x6c, 0xd0,
	0xb2, 0x48, 0xfb, 0x2b, 0x64, 0x1d, 0xb0, 0x29, 0xf4, 0xc5, 0xa5, 0x14, 0x57, 0xd9, 0x9c, 0x07,
	0xee, 0xe3, 0xce, 0xb0, 0x3b, 0xee, 0x4f, 0x0f, 0xd6, 0xbc, 0xba, 0xf4, 0x8a, 0x07, 0x9e, 0x82,
	0x68, 0xb6, 0x9e, 0xbd, 0x81, 0x3b, 0xc4, 0xa9, 0x35, 0xad, 0x88, 0x5d, 0x24, 0x9e, 0xfc, 0x3e,
	0x10, 0x1b, 0xbc, 0xce, 0x6d, 0x85, 0x4d, 0xf6, 0x44, 0x3b, 0xf4, 0xa3, 0xef, 0x11, 0xdc, 0xfd,
	0x03, 0x79, 0x6e, 0x16, 0x96, 0x3d, 0x87, 0xdd, 0x96, 0x75, 0x7f, 0x39, 0xd0, 0x40, 0xb4, 0xa2,
	0x1b, 0xd5, 0x75, 0x90, 0xfd, 0x8f, 0xea, 0xbe, 0x75, 0x6e, 0x50, 0x57, 0x97, 0xd8, 0x7d, 0xe8,
	0xd1, 0x08, 0x5e, 0x90, 0xb2, 0x5e, 0x7a, 0x1b, 0x13, 0x2f, 0x8a, 0x82, 0x3d, 0x86, 0x7d, 0x2a,
	0x96, 0x5e, 0xba, 0xcc, 0x70, 0x2d, 0x71, 0x7c, 0x2f, 0xdd, 0xc5, 0xf4, 0x85, 0x97, 0xee, 0x1d,
	0xd7, 0x92, 0x3d, 0x81, 0x83, 0x16, 0x4e, 0xdb, 0x99, 0xca, 0x65, 0xdc, 0x45, 0xe4, 0xfe, 0x1a,
	0xf9, 0x16, 0xd3, 0xec, 0x04, 0xc8, 0xff, 0x2c, 0x28, 0x2d, 0xe3, 0x5b, 0xc3, 0x68, 0xdc, 0x4d,
	0x49, 0xc2, 0x47, 0xa5, 0x25, 0xbb, 0x07, 0x34, 0x3e, 0x53, 0x45, 0xbc, 0x85, 0x1d, 0x76, 0x30,
	0x3e, 0x2f, 0xd8, 0x23, 0x18, 0x50, 0xc9, 0x49, 0x61, 0xdd, 0x3c, 0xde, 0xc6, 0x32, 0xdd, 0x79,
	0x8a, 0xa9, 0x36, 0x44, 0x73, 0x77, 0x15, 0xef, 0xfc, 0x02, 0xa9, 0x53, 0xa3, 0xaf, 0xad, 0x8b,
	0xaa, 0x4d, 0x5e, 0xbf, 0x8b, 0xff, 0xfa, 0xf0, 0x46, 0x17, 0xd0, 0xdb, 0x4c, 0x3e, 0x82, 0xad,
	0xa0, 0x42, 0x2e, 0x57, 0x17, 0x40, 0x41, 0x9d, 0xfd, 0xc2, 0xf3, 0xb2, 0xf1, 0x9c, 0x02, 0xf6,
	0x00, 0x36, 0x6e, 0xa1, 0xc7, 0x6d, 0xfb, 0xce, 0x3e, 0xc1, 0xa9, 0xb0, 0x3a, 0xb9, 0x56, 0xdc,
	0x2c, 0x0d, 0x4f, 0xaa, 0xaa, 0x6a, 0x64, 0x34, 0x0f, 0xeb, 0xec, 0xb0, 0x39, 0xc8, 0x7b, 0x37,
	0x97, 0x8e, 0x3e, 0xdd, 0xe7, 0xd3, 0xa5, 0x0a, 0x97, 0xe5, 0x2c, 0x11, 0x56, 0x4f, 0xae, 0x8d,
	0x10, 0x13, 0x62, 0xad, 0xbf, 0xec, 0x8c, 0xfe, 0xf9, 0xd3, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x3d, 0xd7, 0x5d, 0x37, 0x10, 0x04, 0x00, 0x00,
}
