// Code generated by protoc-gen-go.
// source: contract/contract.proto
// DO NOT EDIT!

package contract

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import protos "github.com/xncc/protos/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// ======================================三方账本融资申请订单数据=============================================
// 供应商到保理融资申请订单
type FinancingContract struct {
	OrderNo        string              `protobuf:"bytes,1,opt,name=order_no,json=orderNo" json:"order_no,omitempty"`
	Supplier       *protos.AppVo       `protobuf:"bytes,2,opt,name=supplier" json:"supplier,omitempty"`
	Enterprise     *protos.AppVo       `protobuf:"bytes,3,opt,name=enterprise" json:"enterprise,omitempty"`
	Factoring      *protos.AppVo       `protobuf:"bytes,4,opt,name=factoring" json:"factoring,omitempty"`
	ContractData   *ContractFormData   `protobuf:"bytes,5,opt,name=contract_data,json=contractData" json:"contract_data,omitempty"`
	Invoices       []*FinancingInvoice `protobuf:"bytes,6,rep,name=invoices" json:"invoices,omitempty"`
	MoneyCount     *ContractMoneyCount `protobuf:"bytes,8,opt,name=money_count,json=moneyCount" json:"money_count,omitempty"`
	ContractStatus *ContractStatus     `protobuf:"bytes,9,opt,name=contract_status,json=contractStatus" json:"contract_status,omitempty"`
	OperateInfo    *protos.OperateInfo `protobuf:"bytes,10,opt,name=operate_info,json=operateInfo" json:"operate_info,omitempty"`
}

func (m *FinancingContract) Reset()                    { *m = FinancingContract{} }
func (m *FinancingContract) String() string            { return proto.CompactTextString(m) }
func (*FinancingContract) ProtoMessage()               {}
func (*FinancingContract) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *FinancingContract) GetSupplier() *protos.AppVo {
	if m != nil {
		return m.Supplier
	}
	return nil
}

func (m *FinancingContract) GetEnterprise() *protos.AppVo {
	if m != nil {
		return m.Enterprise
	}
	return nil
}

func (m *FinancingContract) GetFactoring() *protos.AppVo {
	if m != nil {
		return m.Factoring
	}
	return nil
}

func (m *FinancingContract) GetContractData() *ContractFormData {
	if m != nil {
		return m.ContractData
	}
	return nil
}

func (m *FinancingContract) GetInvoices() []*FinancingInvoice {
	if m != nil {
		return m.Invoices
	}
	return nil
}

func (m *FinancingContract) GetMoneyCount() *ContractMoneyCount {
	if m != nil {
		return m.MoneyCount
	}
	return nil
}

func (m *FinancingContract) GetContractStatus() *ContractStatus {
	if m != nil {
		return m.ContractStatus
	}
	return nil
}

func (m *FinancingContract) GetOperateInfo() *protos.OperateInfo {
	if m != nil {
		return m.OperateInfo
	}
	return nil
}

// 一张发票的融资信息
type FinancingInvoice struct {
	Invoice               *Invoice `protobuf:"bytes,1,opt,name=invoice" json:"invoice,omitempty"`
	ExpectAmount          int64    `protobuf:"varint,2,opt,name=expect_amount,json=expectAmount" json:"expect_amount,omitempty"`
	ConfirmAmount         int64    `protobuf:"varint,3,opt,name=confirm_amount,json=confirmAmount" json:"confirm_amount,omitempty"`
	ConfirmRate           int64    `protobuf:"varint,4,opt,name=confirm_rate,json=confirmRate" json:"confirm_rate,omitempty"`
	ConfirmPayTime        int64    `protobuf:"varint,5,opt,name=confirm_pay_time,json=confirmPayTime" json:"confirm_pay_time,omitempty"`
	ConfirmReturnTime     int64    `protobuf:"varint,6,opt,name=confirm_return_time,json=confirmReturnTime" json:"confirm_return_time,omitempty"`
	ConfirmEndTime        int64    `protobuf:"varint,7,opt,name=confirm_end_time,json=confirmEndTime" json:"confirm_end_time,omitempty"`
	ConfirmRateDesc       string   `protobuf:"bytes,8,opt,name=confirm_rate_desc,json=confirmRateDesc" json:"confirm_rate_desc,omitempty"`
	ConfirmUrgeReturnDesc string   `protobuf:"bytes,9,opt,name=confirm_urge_return_desc,json=confirmUrgeReturnDesc" json:"confirm_urge_return_desc,omitempty"`
}

func (m *FinancingInvoice) Reset()                    { *m = FinancingInvoice{} }
func (m *FinancingInvoice) String() string            { return proto.CompactTextString(m) }
func (*FinancingInvoice) ProtoMessage()               {}
func (*FinancingInvoice) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *FinancingInvoice) GetInvoice() *Invoice {
	if m != nil {
		return m.Invoice
	}
	return nil
}

// 供应商发票信息
type Invoice struct {
	InvoiceNo     string               `protobuf:"bytes,1,opt,name=invoice_no,json=invoiceNo" json:"invoice_no,omitempty"`
	InvoiceAmount int64                `protobuf:"varint,2,opt,name=invoice_amount,json=invoiceAmount" json:"invoice_amount,omitempty"`
	InvoiceTime   int64                `protobuf:"varint,3,opt,name=invoice_time,json=invoiceTime" json:"invoice_time,omitempty"`
	Supplier      *protos.AppVo        `protobuf:"bytes,4,opt,name=supplier" json:"supplier,omitempty"`
	Enterprise    *protos.AppVo        `protobuf:"bytes,5,opt,name=enterprise" json:"enterprise,omitempty"`
	Remark        string               `protobuf:"bytes,6,opt,name=remark" json:"remark,omitempty"`
	Notes         []*protos.LedgerFile `protobuf:"bytes,7,rep,name=notes" json:"notes,omitempty"`
	OperateInfo   *protos.OperateInfo  `protobuf:"bytes,8,opt,name=operate_info,json=operateInfo" json:"operate_info,omitempty"`
}

func (m *Invoice) Reset()                    { *m = Invoice{} }
func (m *Invoice) String() string            { return proto.CompactTextString(m) }
func (*Invoice) ProtoMessage()               {}
func (*Invoice) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Invoice) GetSupplier() *protos.AppVo {
	if m != nil {
		return m.Supplier
	}
	return nil
}

func (m *Invoice) GetEnterprise() *protos.AppVo {
	if m != nil {
		return m.Enterprise
	}
	return nil
}

func (m *Invoice) GetNotes() []*protos.LedgerFile {
	if m != nil {
		return m.Notes
	}
	return nil
}

func (m *Invoice) GetOperateInfo() *protos.OperateInfo {
	if m != nil {
		return m.OperateInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*FinancingContract)(nil), "protos.FinancingContract")
	proto.RegisterType((*FinancingInvoice)(nil), "protos.FinancingInvoice")
	proto.RegisterType((*Invoice)(nil), "protos.Invoice")
}

func init() { proto.RegisterFile("contract/contract.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 630 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x94, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0xd5, 0xba, 0x4d, 0xe2, 0x49, 0x42, 0xdb, 0xad, 0x28, 0xa6, 0x02, 0x5a, 0x8a, 0x90,
	0x52, 0x10, 0x89, 0x54, 0x10, 0x5c, 0x20, 0x84, 0x7a, 0xa0, 0x52, 0x25, 0x28, 0x68, 0x39, 0x5c,
	0x70, 0x63, 0x6d, 0x37, 0x13, 0xb3, 0xa2, 0xde, 0xb5, 0xd6, 0x1b, 0xda, 0x3e, 0x08, 0xaf, 0xc4,
	0x73, 0xf0, 0x28, 0xc8, 0x7b, 0xc8, 0xb1, 0x12, 0x70, 0x65, 0xcf, 0xfc, 0xdf, 0xcc, 0xce, 0xec,
	0x78, 0x0c, 0xb7, 0xb8, 0x92, 0x46, 0x33, 0x6e, 0x7a, 0xe1, 0xa5, 0x5b, 0x68, 0x65, 0x14, 0xa9,
	0xd9, 0x47, 0xb9, 0xb9, 0xce, 0x55, 0x9e, 0x2b, 0xd9, 0x73, 0x0f, 0x27, 0x6e, 0xde, 0x99, 0x8b,
	0x4a, 0xfb, 0xcc, 0x30, 0xaf, 0xde, 0x9b, 0x57, 0x4b, 0xc3, 0xcc, 0xb0, 0x74, 0xfa, 0xce, 0xef,
	0x08, 0xd6, 0x8e, 0x85, 0x64, 0x92, 0x0b, 0x99, 0x1d, 0x7a, 0x84, 0xdc, 0x86, 0x86, 0xd2, 0x7d,
	0xd4, 0xa9, 0x54, 0xc9, 0xc2, 0xf6, 0x42, 0x27, 0xa6, 0x75, 0x6b, 0x9f, 0x2a, 0xb2, 0x0b, 0x8d,
	0x72, 0x58, 0x14, 0xe7, 0x02, 0x75, 0xb2, 0xb8, 0xbd, 0xd0, 0x69, 0xee, 0xb5, 0x5d, 0xaa, 0xb2,
	0xbb, 0x5f, 0x14, 0x5f, 0x14, 0x1d, 0xc9, 0xe4, 0x09, 0x00, 0x4a, 0x83, 0xba, 0xd0, 0xa2, 0xc4,
	0x24, 0xba, 0x0e, 0x9e, 0x00, 0xc8, 0x63, 0x88, 0x07, 0x8c, 0x1b, 0xa5, 0x85, 0xcc, 0x92, 0xa5,
	0xeb, 0xe8, 0xb1, 0x4e, 0x5e, 0x41, 0x7b, 0xaa, 0xdd, 0x64, 0xd9, 0x06, 0x24, 0x21, 0x20, 0xb4,
	0x72, 0xac, 0x74, 0x7e, 0xc4, 0x0c, 0xa3, 0xad, 0x80, 0x57, 0x16, 0x79, 0x06, 0x0d, 0x21, 0x7f,
	0x28, 0xc1, 0xb1, 0x4c, 0x6a, 0xdb, 0xd1, 0x64, 0xe4, 0xe8, 0x36, 0x4e, 0x1c, 0x40, 0x47, 0x24,
	0x79, 0x09, 0xcd, 0x5c, 0x49, 0xbc, 0x4a, 0xb9, 0x1a, 0x4a, 0x93, 0x34, 0xec, 0x91, 0x9b, 0xb3,
	0x47, 0xbe, 0xab, 0x90, 0xc3, 0x8a, 0xa0, 0x90, 0x8f, 0xde, 0xc9, 0x6b, 0x58, 0x99, 0x19, 0x41,
	0x12, 0xdb, 0x04, 0x1b, 0xb3, 0x09, 0x3e, 0x5a, 0x95, 0xde, 0xe0, 0x53, 0x36, 0x79, 0x0e, 0x2d,
	0x55, 0xa0, 0x66, 0x06, 0x53, 0x21, 0x07, 0x2a, 0x01, 0x1b, 0xbd, 0x1e, 0xa2, 0xdf, 0x3b, 0xed,
	0x44, 0x0e, 0x14, 0x6d, 0xaa, 0xb1, 0xb1, 0xf3, 0x33, 0x82, 0xd5, 0xd9, 0xa6, 0xc8, 0x2e, 0xd4,
	0x7d, 0x5b, 0x76, 0xc0, 0xcd, 0xbd, 0x95, 0x90, 0x27, 0xb4, 0x1d, 0x74, 0xf2, 0x00, 0xda, 0x78,
	0x59, 0x20, 0x37, 0x29, 0xcb, 0x6d, 0xdf, 0xd5, 0xd8, 0x23, 0xda, 0x72, 0xce, 0x7d, 0xeb, 0x23,
	0x0f, 0xa1, 0x2a, 0x77, 0x20, 0x74, 0x1e, 0xa8, 0xc8, 0x52, 0x6d, 0xef, 0xf5, 0xd8, 0x7d, 0x68,
	0x05, 0xac, 0xaa, 0xcf, 0x8e, 0x39, 0xa2, 0x4d, 0xef, 0xa3, 0xcc, 0x20, 0xe9, 0xc0, 0x6a, 0x40,
	0x0a, 0x76, 0x95, 0x1a, 0x91, 0xa3, 0x1d, 0x6e, 0x44, 0xc3, 0x09, 0x1f, 0xd8, 0xd5, 0x27, 0x91,
	0x23, 0xe9, 0xc2, 0xfa, 0x28, 0x19, 0x9a, 0xa1, 0x96, 0x0e, 0xae, 0x59, 0x78, 0x2d, 0xe4, 0xb4,
	0x8a, 0xe5, 0x27, 0x32, 0xa3, 0xec, 0x3b, 0xb8, 0x3e, 0x95, 0xf9, 0x8d, 0xec, 0x5b, 0xf2, 0x11,
	0xac, 0x4d, 0x96, 0x99, 0xf6, 0xb1, 0xe4, 0x76, 0xdc, 0x31, 0x5d, 0x99, 0xa8, 0xf5, 0x08, 0x4b,
	0x4e, 0x5e, 0x40, 0x12, 0xd8, 0xa1, 0xce, 0x30, 0x94, 0x62, 0x43, 0x62, 0x1b, 0x72, 0xd3, 0xeb,
	0x9f, 0x75, 0x86, 0xae, 0x9c, 0x2a, 0x70, 0xe7, 0xd7, 0x22, 0xd4, 0xc3, 0x38, 0xee, 0x02, 0xf8,
	0xeb, 0x1e, 0xaf, 0x5c, 0xec, 0x3d, 0xa7, 0xaa, 0xba, 0xdd, 0x20, 0x4f, 0xcd, 0xa0, 0xed, 0xbd,
	0xe3, 0xdb, 0x0d, 0x98, 0x6d, 0xce, 0x8d, 0xa0, 0xe9, 0x7d, 0xb6, 0xb3, 0xc9, 0xf5, 0x5d, 0xfa,
	0x9f, 0xf5, 0x5d, 0xfe, 0xdb, 0xfa, 0x6e, 0x40, 0x4d, 0x63, 0xce, 0xf4, 0x77, 0x3b, 0x80, 0x98,
	0x7a, 0x8b, 0x74, 0x60, 0x59, 0x2a, 0x83, 0x65, 0x52, 0xb7, 0x7b, 0x46, 0x42, 0x86, 0xb7, 0xd8,
	0xcf, 0x50, 0x1f, 0x8b, 0x73, 0xa4, 0x0e, 0x98, 0xfb, 0xc0, 0x1b, 0xff, 0xf6, 0x81, 0x1f, 0x1c,
	0xc0, 0x16, 0x57, 0x79, 0xf7, 0x52, 0x30, 0x99, 0x49, 0xd6, 0xbd, 0xb8, 0xb8, 0x08, 0x21, 0x61,
	0x83, 0xbe, 0x6e, 0x65, 0xc2, 0x7c, 0x1b, 0x9e, 0x75, 0xb9, 0xca, 0x7b, 0x97, 0x92, 0xf3, 0x9e,
	0x03, 0x46, 0x3f, 0xc5, 0x33, 0xf7, 0x8b, 0x7d, 0xfa, 0x27, 0x00, 0x00, 0xff, 0xff, 0x88, 0x6e,
	0x15, 0xff, 0x84, 0x05, 0x00, 0x00,
}
