// Code generated by protoc-gen-go.
// source: contract/contract.proto
// DO NOT EDIT!

package contract

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import protos "github.com/xncc/protos/common"
import protos1 "github.com/xncc/protos/configuration"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// ======================================三方账本融资申请订单数据=============================================
// 供应商到保理融资申请订单
type FinancingContract struct {
	OrderNo        string                 `protobuf:"bytes,1,opt,name=order_no,json=orderNo" json:"order_no,omitempty"`
	Supplier       *protos1.CommercialOrg `protobuf:"bytes,2,opt,name=supplier" json:"supplier,omitempty"`
	Enterprise     *protos1.CommercialOrg `protobuf:"bytes,3,opt,name=enterprise" json:"enterprise,omitempty"`
	Factoring      *protos1.CommercialOrg `protobuf:"bytes,4,opt,name=factoring" json:"factoring,omitempty"`
	ContractData   *ContractFormData      `protobuf:"bytes,5,opt,name=contract_data,json=contractData" json:"contract_data,omitempty"`
	Invoices       []*Invoice             `protobuf:"bytes,6,rep,name=invoices" json:"invoices,omitempty"`
	MoneyCount     *ContractMoneyCount    `protobuf:"bytes,8,opt,name=money_count,json=moneyCount" json:"money_count,omitempty"`
	ContractStatus *ContractStatus        `protobuf:"bytes,9,opt,name=contract_status,json=contractStatus" json:"contract_status,omitempty"`
	StepHistory    []*ContractStatus      `protobuf:"bytes,10,rep,name=step_history,json=stepHistory" json:"step_history,omitempty"`
	OperateInfo    *protos.OperateInfo    `protobuf:"bytes,11,opt,name=operate_info,json=operateInfo" json:"operate_info,omitempty"`
}

func (m *FinancingContract) Reset()                    { *m = FinancingContract{} }
func (m *FinancingContract) String() string            { return proto.CompactTextString(m) }
func (*FinancingContract) ProtoMessage()               {}
func (*FinancingContract) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *FinancingContract) GetSupplier() *protos1.CommercialOrg {
	if m != nil {
		return m.Supplier
	}
	return nil
}

func (m *FinancingContract) GetEnterprise() *protos1.CommercialOrg {
	if m != nil {
		return m.Enterprise
	}
	return nil
}

func (m *FinancingContract) GetFactoring() *protos1.CommercialOrg {
	if m != nil {
		return m.Factoring
	}
	return nil
}

func (m *FinancingContract) GetContractData() *ContractFormData {
	if m != nil {
		return m.ContractData
	}
	return nil
}

func (m *FinancingContract) GetInvoices() []*Invoice {
	if m != nil {
		return m.Invoices
	}
	return nil
}

func (m *FinancingContract) GetMoneyCount() *ContractMoneyCount {
	if m != nil {
		return m.MoneyCount
	}
	return nil
}

func (m *FinancingContract) GetContractStatus() *ContractStatus {
	if m != nil {
		return m.ContractStatus
	}
	return nil
}

func (m *FinancingContract) GetStepHistory() []*ContractStatus {
	if m != nil {
		return m.StepHistory
	}
	return nil
}

func (m *FinancingContract) GetOperateInfo() *protos.OperateInfo {
	if m != nil {
		return m.OperateInfo
	}
	return nil
}

// 一张发票的融资信息
type Invoice struct {
	// 发票基本信息
	InvoiceNo     string                     `protobuf:"bytes,1,opt,name=invoice_no,json=invoiceNo" json:"invoice_no,omitempty"`
	InvoiceAmount int64                      `protobuf:"varint,2,opt,name=invoice_amount,json=invoiceAmount" json:"invoice_amount,omitempty"`
	InvoiceTime   int64                      `protobuf:"varint,3,opt,name=invoice_time,json=invoiceTime" json:"invoice_time,omitempty"`
	Seller        *Invoice_InvoiceCommercial `protobuf:"bytes,4,opt,name=seller" json:"seller,omitempty"`
	Purchaser     *Invoice_InvoiceCommercial `protobuf:"bytes,5,opt,name=purchaser" json:"purchaser,omitempty"`
	InvoiceRemark string                     `protobuf:"bytes,6,opt,name=invoice_remark,json=invoiceRemark" json:"invoice_remark,omitempty"`
	InvoiceImages [][]byte                   `protobuf:"bytes,7,rep,name=invoice_images,json=invoiceImages,proto3" json:"invoice_images,omitempty"`
	// 供应商维护字段
	ExpeLoanAmount int64 `protobuf:"varint,8,opt,name=expe_loan_amount,json=expeLoanAmount" json:"expe_loan_amount,omitempty"`
	ExpeLoanRate   int64 `protobuf:"varint,9,opt,name=expe_loan_rate,json=expeLoanRate" json:"expe_loan_rate,omitempty"`
	// 保理维护字段
	ConfirmLoanAmount     int64  `protobuf:"varint,10,opt,name=confirm_loan_amount,json=confirmLoanAmount" json:"confirm_loan_amount,omitempty"`
	ConfirmLoanRate       int64  `protobuf:"varint,11,opt,name=confirm_loan_rate,json=confirmLoanRate" json:"confirm_loan_rate,omitempty"`
	ConfirmPayTime        int64  `protobuf:"varint,12,opt,name=confirm_pay_time,json=confirmPayTime" json:"confirm_pay_time,omitempty"`
	ConfirmReturnTime     int64  `protobuf:"varint,13,opt,name=confirm_return_time,json=confirmReturnTime" json:"confirm_return_time,omitempty"`
	ConfirmEndTime        int64  `protobuf:"varint,14,opt,name=confirm_end_time,json=confirmEndTime" json:"confirm_end_time,omitempty"`
	ConfirmRateDesc       string `protobuf:"bytes,15,opt,name=confirm_rate_desc,json=confirmRateDesc" json:"confirm_rate_desc,omitempty"`
	ConfirmUrgeReturnDesc string `protobuf:"bytes,16,opt,name=confirm_urge_return_desc,json=confirmUrgeReturnDesc" json:"confirm_urge_return_desc,omitempty"`
}

func (m *Invoice) Reset()                    { *m = Invoice{} }
func (m *Invoice) String() string            { return proto.CompactTextString(m) }
func (*Invoice) ProtoMessage()               {}
func (*Invoice) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Invoice) GetSeller() *Invoice_InvoiceCommercial {
	if m != nil {
		return m.Seller
	}
	return nil
}

func (m *Invoice) GetPurchaser() *Invoice_InvoiceCommercial {
	if m != nil {
		return m.Purchaser
	}
	return nil
}

// 发票关联机构信息
type Invoice_InvoiceCommercial struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Key         string `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Address     string `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	Phone       string `protobuf:"bytes,4,opt,name=phone" json:"phone,omitempty"`
	BankName    string `protobuf:"bytes,5,opt,name=bankName" json:"bankName,omitempty"`
	BankAccount string `protobuf:"bytes,6,opt,name=bankAccount" json:"bankAccount,omitempty"`
}

func (m *Invoice_InvoiceCommercial) Reset()                    { *m = Invoice_InvoiceCommercial{} }
func (m *Invoice_InvoiceCommercial) String() string            { return proto.CompactTextString(m) }
func (*Invoice_InvoiceCommercial) ProtoMessage()               {}
func (*Invoice_InvoiceCommercial) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 0} }

func init() {
	proto.RegisterType((*FinancingContract)(nil), "protos.FinancingContract")
	proto.RegisterType((*Invoice)(nil), "protos.Invoice")
	proto.RegisterType((*Invoice_InvoiceCommercial)(nil), "protos.Invoice.InvoiceCommercial")
}

func init() { proto.RegisterFile("contract/contract.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 769 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x95, 0x51, 0x6f, 0x23, 0x35,
	0x10, 0xc7, 0x55, 0xd2, 0xa6, 0xc9, 0x6c, 0x9a, 0xb6, 0x2e, 0x07, 0x26, 0x02, 0x9a, 0x3b, 0x81,
	0x14, 0x81, 0x94, 0x88, 0x3b, 0x01, 0x3a, 0x21, 0x74, 0xba, 0xeb, 0x71, 0xa2, 0x12, 0xf4, 0x90,
	0x81, 0x17, 0x5e, 0x22, 0xd7, 0x71, 0xb7, 0x56, 0x63, 0x7b, 0x65, 0x7b, 0x69, 0xf3, 0x89, 0x90,
	0xf8, 0x8a, 0xbc, 0xa0, 0x1d, 0xdb, 0xc9, 0xa6, 0x15, 0x27, 0x9e, 0xd6, 0x33, 0xf3, 0x9b, 0xf1,
	0x78, 0xfc, 0x97, 0x17, 0x3e, 0x14, 0xd6, 0x04, 0xc7, 0x45, 0x98, 0xe5, 0xc5, 0xb4, 0x72, 0x36,
	0x58, 0xd2, 0xc5, 0x8f, 0x1f, 0x9d, 0x08, 0xab, 0xb5, 0x35, 0xb3, 0xf8, 0x89, 0xc1, 0xd1, 0xa9,
	0xb0, 0xe6, 0x4a, 0x95, 0xb5, 0xe3, 0x41, 0x59, 0x33, 0xd3, 0x76, 0x21, 0x97, 0xd1, 0x95, 0x80,
	0x8f, 0x1f, 0x94, 0x9d, 0x2f, 0x78, 0xe0, 0x29, 0xfa, 0xe9, 0xc3, 0xa8, 0x0f, 0x3c, 0xd4, 0x3e,
	0xc6, 0x9f, 0xfc, 0xbd, 0x0b, 0xc7, 0x6f, 0x94, 0xe1, 0x46, 0x28, 0x53, 0x9e, 0x25, 0x84, 0x7c,
	0x04, 0x3d, 0xeb, 0x16, 0xd2, 0xcd, 0x8d, 0xa5, 0x3b, 0xe3, 0x9d, 0x49, 0x9f, 0xed, 0xa3, 0x7d,
	0x61, 0xc9, 0x57, 0xd0, 0xf3, 0x75, 0x55, 0x2d, 0x95, 0x74, 0xf4, 0xbd, 0xf1, 0xce, 0xa4, 0x78,
	0xfa, 0x28, 0x96, 0xf2, 0xd3, 0x33, 0xab, 0xb5, 0x74, 0x42, 0xf1, 0xe5, 0x5b, 0x57, 0xb2, 0x35,
	0x46, 0xbe, 0x06, 0x90, 0x26, 0x48, 0x57, 0x39, 0xe5, 0x25, 0xed, 0xbc, 0x2b, 0xa9, 0x05, 0x92,
	0x67, 0xd0, 0xbf, 0xe2, 0x22, 0x58, 0xa7, 0x4c, 0x49, 0x77, 0xdf, 0x95, 0xb5, 0xe1, 0xc8, 0xf7,
	0x70, 0xb0, 0x35, 0x06, 0xba, 0x87, 0x89, 0x74, 0x93, 0x18, 0x83, 0x6f, 0xac, 0xd3, 0xaf, 0x79,
	0xe0, 0x6c, 0x90, 0xf1, 0xc6, 0x22, 0x5f, 0x42, 0x4f, 0x99, 0x3f, 0xad, 0x12, 0xd2, 0xd3, 0xee,
	0xb8, 0x33, 0x29, 0x9e, 0x1e, 0xe6, 0xcc, 0xf3, 0xe8, 0x67, 0x6b, 0x80, 0x7c, 0x07, 0x85, 0xb6,
	0x46, 0xae, 0xe6, 0xc2, 0xd6, 0x26, 0xd0, 0x1e, 0xee, 0x34, 0xba, 0xbf, 0xd3, 0xcf, 0x0d, 0x72,
	0xd6, 0x10, 0x0c, 0xf4, 0x7a, 0x4d, 0x5e, 0xc0, 0xe1, 0xbd, 0x1b, 0xa1, 0x7d, 0x2c, 0xf0, 0xc1,
	0xfd, 0x02, 0xbf, 0x62, 0x94, 0x0d, 0xc5, 0x96, 0x4d, 0x9e, 0xc3, 0xc0, 0x07, 0x59, 0xcd, 0xaf,
	0x95, 0x0f, 0xd6, 0xad, 0x28, 0x60, 0xbb, 0xff, 0x95, 0x5d, 0x34, 0xec, 0x8f, 0x11, 0x25, 0xdf,
	0xc0, 0xc0, 0x56, 0xd2, 0xf1, 0x20, 0xe7, 0xca, 0x5c, 0x59, 0x5a, 0xe0, 0xc6, 0x27, 0x39, 0xf5,
	0x6d, 0x8c, 0x9d, 0x9b, 0x2b, 0xcb, 0x0a, 0xbb, 0x31, 0x9e, 0xfc, 0xd3, 0x85, 0xfd, 0x34, 0x06,
	0xf2, 0x09, 0x40, 0x1a, 0xc4, 0x46, 0x24, 0xfd, 0xe4, 0xb9, 0xb0, 0xe4, 0x73, 0x18, 0xe6, 0x30,
	0xd7, 0x38, 0x9e, 0x46, 0x2c, 0x1d, 0x76, 0x90, 0xbc, 0x2f, 0xd1, 0x49, 0x1e, 0xc3, 0x20, 0x63,
	0x41, 0xe9, 0x28, 0x8e, 0x0e, 0x2b, 0x92, 0xef, 0x37, 0xa5, 0x25, 0x79, 0x0e, 0x5d, 0x2f, 0x97,
	0x4b, 0xe9, 0x92, 0x06, 0x1e, 0xdf, 0xbb, 0x90, 0xfc, 0xdd, 0x48, 0x82, 0xa5, 0x04, 0xf2, 0x02,
	0xfa, 0x55, 0xed, 0xc4, 0x35, 0xf7, 0xd2, 0x25, 0x21, 0xfc, 0x8f, 0xec, 0x4d, 0x4e, 0xfb, 0x14,
	0x4e, 0x6a, 0xee, 0x6e, 0x68, 0x17, 0x0f, 0x9a, 0x4f, 0xc1, 0xd0, 0xd9, 0xc6, 0x94, 0xe6, 0xa5,
	0xf4, 0x74, 0x7f, 0xdc, 0x99, 0x0c, 0xd6, 0xd8, 0x39, 0x3a, 0xc9, 0x04, 0x8e, 0xe4, 0x5d, 0x25,
	0xe7, 0x4b, 0xcb, 0x4d, 0x9e, 0x4a, 0x0f, 0x0f, 0x3c, 0x6c, 0xfc, 0x3f, 0x59, 0x6e, 0xd2, 0x58,
	0x3e, 0x83, 0xe1, 0x86, 0x6c, 0xc6, 0x8f, 0xda, 0xe8, 0xb0, 0x41, 0xe6, 0x18, 0x0f, 0x92, 0x4c,
	0xe1, 0x04, 0x5f, 0x02, 0xa7, 0xb7, 0x4a, 0x02, 0xa2, 0xc7, 0x29, 0xd4, 0xaa, 0xfa, 0x05, 0x1c,
	0x6f, 0xf1, 0x58, 0xb8, 0x40, 0xfa, 0xb0, 0x45, 0x63, 0xed, 0x09, 0x1c, 0x65, 0xb6, 0xe2, 0xab,
	0x78, 0x39, 0x83, 0xd8, 0x6b, 0xf2, 0xff, 0xc2, 0x57, 0x78, 0x3f, 0xad, 0x2e, 0x9c, 0x0c, 0xb5,
	0x33, 0x11, 0x3e, 0xd8, 0xea, 0x82, 0x61, 0x04, 0xf9, 0x56, 0x65, 0x69, 0x16, 0x11, 0x1e, 0x6e,
	0x55, 0xfe, 0xc1, 0x2c, 0x90, 0x6c, 0xf5, 0x8b, 0x5a, 0x5d, 0x48, 0x2f, 0xe8, 0x21, 0x5e, 0x40,
	0xee, 0xb7, 0xe9, 0xf5, 0xb5, 0xf4, 0x82, 0x7c, 0x0b, 0x34, 0xb3, 0xb5, 0x2b, 0x65, 0x6e, 0x05,
	0x53, 0x8e, 0x30, 0xe5, 0x51, 0x8a, 0xff, 0xee, 0x4a, 0x19, 0xdb, 0x69, 0x12, 0x47, 0x7f, 0xed,
	0xc0, 0xf1, 0x03, 0x0d, 0x10, 0x02, 0xbb, 0x86, 0x6b, 0x99, 0x74, 0x8d, 0x6b, 0x72, 0x04, 0x9d,
	0x1b, 0xb9, 0x42, 0x1d, 0xf7, 0x59, 0xb3, 0x24, 0x14, 0xf6, 0xf9, 0x62, 0xe1, 0xa4, 0xf7, 0x28,
	0xdc, 0x3e, 0xcb, 0x26, 0x79, 0x1f, 0xf6, 0xaa, 0x6b, 0x6b, 0x24, 0x6a, 0xb6, 0xcf, 0xa2, 0x41,
	0x46, 0xd0, 0xbb, 0xe4, 0xe6, 0xe6, 0xa2, 0xa9, 0xbc, 0x87, 0x81, 0xb5, 0x4d, 0xc6, 0x50, 0x34,
	0xeb, 0x97, 0x22, 0x3e, 0x26, 0x51, 0x67, 0x6d, 0xd7, 0xab, 0x57, 0x70, 0x2a, 0xac, 0x9e, 0xde,
	0x29, 0x6e, 0x4a, 0xc3, 0xa7, 0xb7, 0xb7, 0xb7, 0x59, 0xcb, 0xf9, 0x65, 0xf8, 0xe3, 0xb4, 0x54,
	0xe1, 0xba, 0xbe, 0x9c, 0x0a, 0xab, 0x67, 0x77, 0x46, 0x88, 0x59, 0x04, 0xd6, 0x6f, 0xff, 0x65,
	0xfc, 0xd5, 0x3c, 0xfb, 0x37, 0x00, 0x00, 0xff, 0xff, 0x85, 0x8e, 0xcb, 0x3d, 0x8c, 0x06, 0x00,
	0x00,
}
