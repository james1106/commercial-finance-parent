// Code generated by protoc-gen-go.
// source: contract/contract_request.proto
// DO NOT EDIT!

package contract

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import protos "github.com/xncc/protos/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 查询类型
type ContractQueryRequest_QueryType int32

const (
	ContractQueryRequest_ALL       ContractQueryRequest_QueryType = 0
	ContractQueryRequest_FILE      ContractQueryRequest_QueryType = 1
	ContractQueryRequest_FILELILST ContractQueryRequest_QueryType = 2
)

var ContractQueryRequest_QueryType_name = map[int32]string{
	0: "ALL",
	1: "FILE",
	2: "FILELILST",
}
var ContractQueryRequest_QueryType_value = map[string]int32{
	"ALL":       0,
	"FILE":      1,
	"FILELILST": 2,
}

func (x ContractQueryRequest_QueryType) String() string {
	return proto.EnumName(ContractQueryRequest_QueryType_name, int32(x))
}
func (ContractQueryRequest_QueryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor3, []int{3, 0}
}

// 执行合约请求参数
type ContractExcuteRequest struct {
	Action       string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	No           string `protobuf:"bytes,2,opt,name=no" json:"no,omitempty"`
	ContractData []byte `protobuf:"bytes,3,opt,name=contractData,proto3" json:"contractData,omitempty"`
	ContractFile []byte `protobuf:"bytes,4,opt,name=contractFile,proto3" json:"contractFile,omitempty"`
}

func (m *ContractExcuteRequest) Reset()                    { *m = ContractExcuteRequest{} }
func (m *ContractExcuteRequest) String() string            { return proto.CompactTextString(m) }
func (*ContractExcuteRequest) ProtoMessage()               {}
func (*ContractExcuteRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

// 执行文件新增请求参数
type FileAddRequest struct {
	No        string                   `protobuf:"bytes,1,opt,name=no" json:"no,omitempty"`
	FileDatas []*protos.LedgerFileData `protobuf:"bytes,2,rep,name=fileDatas" json:"fileDatas,omitempty"`
	FileInfos []*protos.LedgerFile     `protobuf:"bytes,3,rep,name=fileInfos" json:"fileInfos,omitempty"`
}

func (m *FileAddRequest) Reset()                    { *m = FileAddRequest{} }
func (m *FileAddRequest) String() string            { return proto.CompactTextString(m) }
func (*FileAddRequest) ProtoMessage()               {}
func (*FileAddRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *FileAddRequest) GetFileDatas() []*protos.LedgerFileData {
	if m != nil {
		return m.FileDatas
	}
	return nil
}

func (m *FileAddRequest) GetFileInfos() []*protos.LedgerFile {
	if m != nil {
		return m.FileInfos
	}
	return nil
}

// 合约新增审批日志请求参数
type ContractAddCheckLogRequest struct {
	No string `protobuf:"bytes,1,opt,name=no" json:"no,omitempty"`
	// refer message contract.ContractCheckFlowData
	ContractCheckFlowData []byte `protobuf:"bytes,2,opt,name=contractCheckFlowData,proto3" json:"contractCheckFlowData,omitempty"`
}

func (m *ContractAddCheckLogRequest) Reset()                    { *m = ContractAddCheckLogRequest{} }
func (m *ContractAddCheckLogRequest) String() string            { return proto.CompactTextString(m) }
func (*ContractAddCheckLogRequest) ProtoMessage()               {}
func (*ContractAddCheckLogRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

// 合约查询请求参数
type ContractQueryRequest struct {
	No      string                         `protobuf:"bytes,1,opt,name=no" json:"no,omitempty"`
	Type    ContractQueryRequest_QueryType `protobuf:"varint,2,opt,name=type,enum=protos.ContractQueryRequest_QueryType" json:"type,omitempty"`
	FileKey string                         `protobuf:"bytes,3,opt,name=fileKey" json:"fileKey,omitempty"`
}

func (m *ContractQueryRequest) Reset()                    { *m = ContractQueryRequest{} }
func (m *ContractQueryRequest) String() string            { return proto.CompactTextString(m) }
func (*ContractQueryRequest) ProtoMessage()               {}
func (*ContractQueryRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func init() {
	proto.RegisterType((*ContractExcuteRequest)(nil), "protos.ContractExcuteRequest")
	proto.RegisterType((*FileAddRequest)(nil), "protos.FileAddRequest")
	proto.RegisterType((*ContractAddCheckLogRequest)(nil), "protos.ContractAddCheckLogRequest")
	proto.RegisterType((*ContractQueryRequest)(nil), "protos.ContractQueryRequest")
	proto.RegisterEnum("protos.ContractQueryRequest_QueryType", ContractQueryRequest_QueryType_name, ContractQueryRequest_QueryType_value)
}

func init() { proto.RegisterFile("contract/contract_request.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 382 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x52, 0xcd, 0x6e, 0xe2, 0x30,
	0x10, 0x5e, 0x27, 0x08, 0x36, 0x5e, 0x16, 0x21, 0xef, 0x82, 0x22, 0x2e, 0xa0, 0x1c, 0x56, 0x5c,
	0x36, 0xa9, 0x68, 0x4f, 0xbd, 0x01, 0x25, 0x12, 0x6a, 0x2e, 0x4d, 0x39, 0xf5, 0x52, 0x05, 0xc7,
	0x84, 0xa8, 0xc4, 0xa6, 0x89, 0xa3, 0x90, 0x27, 0x68, 0xdf, 0xa5, 0x2f, 0x59, 0xc5, 0xc6, 0x50,
	0x54, 0x38, 0x79, 0x7e, 0xbe, 0x6f, 0x66, 0xbe, 0xf1, 0xc0, 0x3e, 0x66, 0x94, 0xa7, 0x01, 0xe6,
	0x8e, 0x32, 0x9e, 0x53, 0xf2, 0x9a, 0x93, 0x8c, 0xdb, 0xdb, 0x94, 0x71, 0x86, 0xea, 0xe2, 0xc9,
	0x7a, 0x7f, 0x30, 0x4b, 0x12, 0x46, 0x1d, 0xf9, 0xc8, 0xa4, 0xf5, 0x06, 0x60, 0x67, 0xba, 0xe7,
	0xcd, 0x76, 0x38, 0xe7, 0xc4, 0x97, 0x64, 0xd4, 0x85, 0xf5, 0x00, 0xf3, 0x98, 0x51, 0x13, 0x0c,
	0xc0, 0xd0, 0xf0, 0xf7, 0x1e, 0x6a, 0x41, 0x8d, 0x32, 0x53, 0x13, 0x31, 0x8d, 0x32, 0x64, 0xc1,
	0xa6, 0x6a, 0x7c, 0x17, 0xf0, 0xc0, 0xd4, 0x07, 0x60, 0xd8, 0xf4, 0x4f, 0x62, 0x5f, 0x31, 0x6e,
	0xbc, 0x21, 0x66, 0xed, 0x14, 0x53, 0xc5, 0xac, 0x77, 0x00, 0x5b, 0x95, 0x31, 0x0e, 0x43, 0x35,
	0x82, 0x6c, 0x05, 0x0e, 0xad, 0x6e, 0xa0, 0xb1, 0x8a, 0x37, 0xa4, 0x2a, 0x99, 0x99, 0xda, 0x40,
	0x1f, 0xfe, 0x1a, 0x75, 0xa5, 0x8e, 0xcc, 0xf6, 0x48, 0x18, 0x91, 0xd4, 0xdd, 0xa7, 0xfd, 0x23,
	0x10, 0x5d, 0x49, 0xd6, 0x9c, 0xae, 0x58, 0x66, 0xea, 0x82, 0x85, 0xbe, 0xb3, 0xfc, 0x23, 0xc8,
	0x5a, 0xc2, 0x9e, 0xda, 0xc9, 0x38, 0x0c, 0xa7, 0x6b, 0x82, 0x5f, 0x3c, 0x16, 0x5d, 0x9e, 0xaa,
	0xa3, 0x84, 0x08, 0xa8, 0xbb, 0x61, 0x85, 0xd8, 0x84, 0x26, 0x54, 0x9e, 0x4f, 0x5a, 0x1f, 0x00,
	0xfe, 0x55, 0x4d, 0x1e, 0x72, 0x92, 0x96, 0x97, 0xca, 0xdf, 0xc2, 0x1a, 0x2f, 0xb7, 0x44, 0x54,
	0x6b, 0x8d, 0xfe, 0xa9, 0xc9, 0xcf, 0x71, 0x6d, 0xe1, 0x2c, 0xca, 0x2d, 0xf1, 0x05, 0x07, 0x99,
	0xb0, 0x51, 0xa9, 0xba, 0x27, 0xa5, 0xf8, 0x16, 0xc3, 0x57, 0xae, 0xf5, 0x1f, 0x1a, 0x07, 0x30,
	0x6a, 0x40, 0x7d, 0xec, 0x79, 0xed, 0x1f, 0xe8, 0x27, 0xac, 0xb9, 0x73, 0x6f, 0xd6, 0x06, 0xe8,
	0x37, 0x34, 0x2a, 0xcb, 0x9b, 0x7b, 0x8f, 0x8b, 0xb6, 0x36, 0x99, 0x54, 0x67, 0x96, 0xd8, 0xbb,
	0x38, 0xa0, 0x11, 0x0d, 0xec, 0xa2, 0x28, 0xd4, 0x1c, 0x4a, 0xdd, 0x53, 0x3f, 0x8a, 0xf9, 0x3a,
	0x5f, 0xda, 0x98, 0x25, 0xce, 0x8e, 0x62, 0xec, 0x48, 0xc0, 0xe1, 0x2a, 0x97, 0xf2, 0x0e, 0xaf,
	0x3f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x92, 0x67, 0x1b, 0x7b, 0xb1, 0x02, 0x00, 0x00,
}
