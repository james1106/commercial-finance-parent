// Code generated by protoc-gen-go.
// source: contract/bank_contract.proto
// DO NOT EDIT!

/*
Package contract is a generated protocol buffer package.

It is generated from these files:
	contract/bank_contract.proto
	contract/contract.proto
	contract/contract_data.proto
	contract/contract_request.proto
	contract/contract_status.proto

It has these top-level messages:
	BankLoanContract
	FinancingContractReview
	FinancingContract
	Invoice
	ContractFormData
	ContractMoneyCount
	ContractTransactionDetail
	ContractExcuteRequest
	FileAddRequest
	ContractAddCheckLogRequest
	ContractQueryRequest
	ContractStatus
	ContractCheckFlowInfo
	ContractCheckFlowData
	ContractStepCheckData
	CheckData
*/
package contract

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import protos "github.com/xncc/protos/common"
import protos1 "github.com/xncc/protos/configuration"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ========================================银行保理双方账本数据定义===========================================
// 融资申请订单
// 保理到银行贷款融资申请订单
type BankLoanContract struct {
	OrderNo                  string                     `protobuf:"bytes,1,opt,name=order_no,json=orderNo" json:"order_no,omitempty"`
	Factoring                *protos1.CommercialOrg     `protobuf:"bytes,2,opt,name=factoring" json:"factoring,omitempty"`
	BankInfo                 *protos1.CommercialOrg     `protobuf:"bytes,3,opt,name=bank_info,json=bankInfo" json:"bank_info,omitempty"`
	ContractData             *ContractFormData          `protobuf:"bytes,4,opt,name=contract_data,json=contractData" json:"contract_data,omitempty"`
	FinancingContractReviews []*FinancingContractReview `protobuf:"bytes,5,rep,name=financing_contract_reviews,json=financingContractReviews" json:"financing_contract_reviews,omitempty"`
	MoneyCount               *ContractMoneyCount        `protobuf:"bytes,6,opt,name=money_count,json=moneyCount" json:"money_count,omitempty"`
	ContractStatus           *ContractStatus            `protobuf:"bytes,7,opt,name=contract_status,json=contractStatus" json:"contract_status,omitempty"`
	StepHistory              []*ContractStatus          `protobuf:"bytes,8,rep,name=step_history,json=stepHistory" json:"step_history,omitempty"`
	OperateInfo              *protos.OperateInfo        `protobuf:"bytes,9,opt,name=operate_info,json=operateInfo" json:"operate_info,omitempty"`
}

func (m *BankLoanContract) Reset()                    { *m = BankLoanContract{} }
func (m *BankLoanContract) String() string            { return proto.CompactTextString(m) }
func (*BankLoanContract) ProtoMessage()               {}
func (*BankLoanContract) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BankLoanContract) GetFactoring() *protos1.CommercialOrg {
	if m != nil {
		return m.Factoring
	}
	return nil
}

func (m *BankLoanContract) GetBankInfo() *protos1.CommercialOrg {
	if m != nil {
		return m.BankInfo
	}
	return nil
}

func (m *BankLoanContract) GetContractData() *ContractFormData {
	if m != nil {
		return m.ContractData
	}
	return nil
}

func (m *BankLoanContract) GetFinancingContractReviews() []*FinancingContractReview {
	if m != nil {
		return m.FinancingContractReviews
	}
	return nil
}

func (m *BankLoanContract) GetMoneyCount() *ContractMoneyCount {
	if m != nil {
		return m.MoneyCount
	}
	return nil
}

func (m *BankLoanContract) GetContractStatus() *ContractStatus {
	if m != nil {
		return m.ContractStatus
	}
	return nil
}

func (m *BankLoanContract) GetStepHistory() []*ContractStatus {
	if m != nil {
		return m.StepHistory
	}
	return nil
}

func (m *BankLoanContract) GetOperateInfo() *protos.OperateInfo {
	if m != nil {
		return m.OperateInfo
	}
	return nil
}

// 保理到银行贷款融资申请订单质押的供应商融资申请订单
type FinancingContractReview struct {
	FinancingOrderNo string `protobuf:"bytes,1,opt,name=financing_order_no,json=financingOrderNo" json:"financing_order_no,omitempty"`
	OrderAmount      int64  `protobuf:"varint,2,opt,name=order_amount,json=orderAmount" json:"order_amount,omitempty"`
	FinancingPeriod  int32  `protobuf:"varint,3,opt,name=financing_period,json=financingPeriod" json:"financing_period,omitempty"`
	OrderExpiredTime int64  `protobuf:"varint,4,opt,name=order_expired_time,json=orderExpiredTime" json:"order_expired_time,omitempty"`
	// 保理申请的融资金额
	ExpectAmount int64 `protobuf:"varint,5,opt,name=expect_amount,json=expectAmount" json:"expect_amount,omitempty"`
	ExpectRate   int64 `protobuf:"varint,6,opt,name=expect_rate,json=expectRate" json:"expect_rate,omitempty"`
	// 银行审批确认的融资金额
	ConfirmAmount      int64 `protobuf:"varint,7,opt,name=confirm_amount,json=confirmAmount" json:"confirm_amount,omitempty"`
	ConfirmRate        int64 `protobuf:"varint,8,opt,name=confirm_rate,json=confirmRate" json:"confirm_rate,omitempty"`
	ConfirmExpiredTime int64 `protobuf:"varint,9,opt,name=confirm_expired_time,json=confirmExpiredTime" json:"confirm_expired_time,omitempty"`
}

func (m *FinancingContractReview) Reset()                    { *m = FinancingContractReview{} }
func (m *FinancingContractReview) String() string            { return proto.CompactTextString(m) }
func (*FinancingContractReview) ProtoMessage()               {}
func (*FinancingContractReview) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*BankLoanContract)(nil), "protos.BankLoanContract")
	proto.RegisterType((*FinancingContractReview)(nil), "protos.FinancingContractReview")
}

func init() { proto.RegisterFile("contract/bank_contract.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 574 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x94, 0x6f, 0x6f, 0xd3, 0x3e,
	0x10, 0xc7, 0xb5, 0x5f, 0xf6, 0xa7, 0x75, 0xb2, 0x3f, 0xf2, 0x7e, 0x40, 0xa8, 0x80, 0x6e, 0x43,
	0x48, 0x43, 0x42, 0x2d, 0xda, 0x24, 0x24, 0x84, 0x10, 0x62, 0x83, 0x09, 0x24, 0x60, 0xc8, 0xf0,
	0x08, 0x09, 0x45, 0xae, 0xeb, 0x64, 0xd6, 0xb0, 0x2f, 0x72, 0x5c, 0xda, 0xbd, 0x00, 0x5e, 0x0a,
	0xef, 0x13, 0xe5, 0x1c, 0x37, 0xb4, 0x30, 0x1e, 0x25, 0xbe, 0xef, 0xe7, 0xbe, 0xf6, 0xf9, 0x2e,
	0x21, 0x77, 0x04, 0x18, 0x67, 0xb9, 0x70, 0xc3, 0x11, 0x37, 0x97, 0x59, 0x58, 0x0d, 0x4a, 0x0b,
	0x0e, 0xe8, 0x3a, 0x3e, 0xaa, 0xde, 0xae, 0x00, 0xad, 0xc1, 0x0c, 0xfd, 0xc3, 0x8b, 0xbd, 0xbb,
	0x02, 0x4c, 0xae, 0x8a, 0x89, 0xe5, 0x4e, 0x81, 0x19, 0xf2, 0xb2, 0xf4, 0x81, 0x46, 0x6e, 0x9d,
	0xc3, 0x4b, 0x36, 0xe6, 0x8e, 0x37, 0xea, 0xbd, 0x3f, 0xd5, 0xca, 0x71, 0x37, 0xa9, 0xbc, 0x7e,
	0xf0, 0x73, 0x95, 0xec, 0x9c, 0x70, 0x73, 0xf9, 0x0e, 0xb8, 0x39, 0x6d, 0x08, 0x7a, 0x9b, 0x74,
	0xc0, 0x8e, 0xa5, 0xcd, 0x0c, 0xa4, 0x2b, 0x7b, 0x2b, 0x87, 0x5d, 0xb6, 0x81, 0xeb, 0x0f, 0x40,
	0x8f, 0x49, 0x37, 0xe7, 0xc2, 0x81, 0x55, 0xa6, 0x48, 0xff, 0xdb, 0x5b, 0x39, 0x8c, 0x8f, 0x6e,
	0x78, 0xab, 0x6a, 0x70, 0x0a, 0x5a, 0x4b, 0x2b, 0x14, 0xff, 0x76, 0x6e, 0x0b, 0xd6, 0x72, 0xf4,
	0x88, 0x74, 0xb1, 0x6a, 0x65, 0x72, 0x48, 0xa3, 0x7f, 0x25, 0x75, 0x6a, 0xee, 0xad, 0xc9, 0x81,
	0x3e, 0x27, 0x9b, 0x0b, 0xf5, 0xa4, 0xab, 0x98, 0x97, 0xb6, 0x79, 0x5e, 0x3c, 0x03, 0xab, 0x5f,
	0x71, 0xc7, 0x59, 0x12, 0xf0, 0x7a, 0x45, 0xbf, 0x92, 0x5e, 0xae, 0x0c, 0x37, 0x42, 0x99, 0x62,
	0x7e, 0xdb, 0x99, 0x95, 0xdf, 0x95, 0x9c, 0x56, 0xe9, 0xda, 0x5e, 0x74, 0x18, 0x1f, 0xf5, 0x83,
	0xd7, 0x59, 0x20, 0x83, 0x29, 0x43, 0x8e, 0xa5, 0xf9, 0xdf, 0x85, 0x8a, 0x3e, 0x23, 0xb1, 0x06,
	0x23, 0xaf, 0x32, 0x01, 0x13, 0xe3, 0xd2, 0x75, 0x3c, 0x5b, 0x6f, 0xf9, 0x6c, 0xef, 0x6b, 0xe4,
	0xb4, 0x26, 0x18, 0xd1, 0xf3, 0x77, 0xfa, 0x82, 0x6c, 0x2f, 0x35, 0x23, 0xdd, 0x40, 0x83, 0x9b,
	0xcb, 0x06, 0x9f, 0x50, 0x65, 0x5b, 0x62, 0x61, 0x4d, 0x9f, 0x92, 0xa4, 0x72, 0xb2, 0xcc, 0x2e,
	0x54, 0xe5, 0xc0, 0x5e, 0xa5, 0x1d, 0x2c, 0xe7, 0xba, 0xec, 0xb8, 0x66, 0xdf, 0x78, 0x94, 0x3e,
	0x21, 0x09, 0x94, 0xd2, 0x72, 0x27, 0x7d, 0x37, 0xba, 0xb8, 0xf1, 0x6e, 0x48, 0x3d, 0xf7, 0x5a,
	0xdd, 0x01, 0x16, 0x43, 0xbb, 0x38, 0xf8, 0x11, 0x91, 0x5b, 0xd7, 0x5c, 0x13, 0x7d, 0x44, 0x68,
	0x7b, 0xd7, 0x4b, 0x83, 0xb3, 0x33, 0x57, 0xce, 0x9b, 0x09, 0xda, 0x27, 0x89, 0x67, 0xb8, 0xc6,
	0xbb, 0xab, 0x87, 0x28, 0x62, 0x31, 0xc6, 0x5e, 0x62, 0x88, 0x3e, 0x24, 0x6d, 0x5a, 0x56, 0x4a,
	0xab, 0x60, 0x8c, 0x63, 0xb3, 0xc6, 0xb6, 0xe7, 0xf1, 0x8f, 0x18, 0xae, 0xf7, 0xf6, 0x6e, 0x72,
	0x56, 0x2a, 0x2b, 0xc7, 0x99, 0x53, 0x5a, 0xe2, 0xac, 0x44, 0x6c, 0x07, 0x95, 0xd7, 0x5e, 0xf8,
	0xac, 0xb4, 0xa4, 0xf7, 0xc9, 0xa6, 0x9c, 0x95, 0x52, 0xb8, 0xb0, 0xf9, 0x1a, 0x82, 0x89, 0x0f,
	0x36, 0xbb, 0xf7, 0x49, 0xdc, 0x40, 0x75, 0xf5, 0xd8, 0xdb, 0x88, 0x11, 0x1f, 0x62, 0xdc, 0x49,
	0xfa, 0x80, 0x6c, 0xe1, 0x17, 0x68, 0x75, 0xb0, 0xd9, 0x40, 0x66, 0xb3, 0x89, 0x36, 0x3e, 0xfb,
	0x24, 0x09, 0x18, 0x1a, 0x75, 0x7c, 0xa1, 0x4d, 0x0c, 0x9d, 0x1e, 0x93, 0xff, 0x03, 0xb2, 0x70,
	0xfe, 0x2e, 0xa2, 0xb4, 0xd1, 0x7e, 0xab, 0xe0, 0xe4, 0x84, 0xf4, 0x05, 0xe8, 0xc1, 0x4c, 0x71,
	0x53, 0x18, 0x3e, 0x98, 0x4e, 0xa7, 0xa1, 0x75, 0x61, 0x46, 0xbe, 0xf4, 0x0b, 0xe5, 0x2e, 0x26,
	0xa3, 0x81, 0x00, 0x3d, 0x9c, 0x19, 0x21, 0x86, 0x1e, 0x98, 0xff, 0x00, 0x46, 0xfe, 0x6f, 0x73,
	0xfc, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x4b, 0x59, 0x70, 0xf5, 0x94, 0x04, 0x00, 0x00,
}
