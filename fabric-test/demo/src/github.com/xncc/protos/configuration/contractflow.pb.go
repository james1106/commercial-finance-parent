// Code generated by protoc-gen-go.
// source: configuration/contractflow.proto
// DO NOT EDIT!

package configuration

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import protos "github.com/xncc/protos/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 订单节点数据
type ContractStep struct {
	StepId      string              `protobuf:"bytes,1,opt,name=step_id,json=stepId" json:"step_id,omitempty"`
	StepName    string              `protobuf:"bytes,2,opt,name=step_name,json=stepName" json:"step_name,omitempty"`
	UserInfo    *UserInfo           `protobuf:"bytes,3,opt,name=user_info,json=userInfo" json:"user_info,omitempty"`
	Remark      string              `protobuf:"bytes,4,opt,name=remark" json:"remark,omitempty"`
	IsStartNode bool                `protobuf:"varint,5,opt,name=is_start_node,json=isStartNode" json:"is_start_node,omitempty"`
	IsEndNode   bool                `protobuf:"varint,6,opt,name=is_end_node,json=isEndNode" json:"is_end_node,omitempty"`
	OaUrl       string              `protobuf:"bytes,7,opt,name=oa_url,json=oaUrl" json:"oa_url,omitempty"`
	Next        *ContractStep       `protobuf:"bytes,8,opt,name=next" json:"next,omitempty"`
	Previous    *ContractStep       `protobuf:"bytes,9,opt,name=previous" json:"previous,omitempty"`
	OperateInfo *protos.OperateInfo `protobuf:"bytes,10,opt,name=operate_info,json=operateInfo" json:"operate_info,omitempty"`
}

func (m *ContractStep) Reset()                    { *m = ContractStep{} }
func (m *ContractStep) String() string            { return proto.CompactTextString(m) }
func (*ContractStep) ProtoMessage()               {}
func (*ContractStep) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ContractStep) GetUserInfo() *UserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

func (m *ContractStep) GetNext() *ContractStep {
	if m != nil {
		return m.Next
	}
	return nil
}

func (m *ContractStep) GetPrevious() *ContractStep {
	if m != nil {
		return m.Previous
	}
	return nil
}

func (m *ContractStep) GetOperateInfo() *protos.OperateInfo {
	if m != nil {
		return m.OperateInfo
	}
	return nil
}

// 订单流程数据
type ContractFlow struct {
	Steps       []*ContractStep     `protobuf:"bytes,1,rep,name=steps" json:"steps,omitempty"`
	OperateInfo *protos.OperateInfo `protobuf:"bytes,2,opt,name=operate_info,json=operateInfo" json:"operate_info,omitempty"`
}

func (m *ContractFlow) Reset()                    { *m = ContractFlow{} }
func (m *ContractFlow) String() string            { return proto.CompactTextString(m) }
func (*ContractFlow) ProtoMessage()               {}
func (*ContractFlow) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ContractFlow) GetSteps() []*ContractStep {
	if m != nil {
		return m.Steps
	}
	return nil
}

func (m *ContractFlow) GetOperateInfo() *protos.OperateInfo {
	if m != nil {
		return m.OperateInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*ContractStep)(nil), "protos.ContractStep")
	proto.RegisterType((*ContractFlow)(nil), "protos.ContractFlow")
}

func init() { proto.RegisterFile("configuration/contractflow.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 385 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x92, 0x5f, 0xcb, 0xd3, 0x30,
	0x14, 0xc6, 0xe9, 0xfe, 0x74, 0x6d, 0x3a, 0x41, 0x32, 0xff, 0x84, 0x89, 0x52, 0xc6, 0x2e, 0x8a,
	0x60, 0x2b, 0x0a, 0x7e, 0x00, 0x45, 0x61, 0x20, 0x13, 0x3a, 0x76, 0xe3, 0x4d, 0xc9, 0xd2, 0x74,
	0x06, 0xdb, 0x9c, 0x92, 0xa4, 0x76, 0x9f, 0xdd, 0x2b, 0x69, 0xb2, 0x39, 0x87, 0xbc, 0x2f, 0xef,
	0x55, 0x7a, 0xce, 0xf3, 0x3b, 0x79, 0xd2, 0x87, 0x83, 0x62, 0x06, 0xb2, 0x12, 0xc7, 0x4e, 0x51,
	0x23, 0x40, 0x66, 0x0c, 0xa4, 0x51, 0x94, 0x99, 0xaa, 0x86, 0x3e, 0x6d, 0x15, 0x18, 0xc0, 0xbe,
	0x3d, 0xf4, 0x72, 0xc1, 0xa0, 0x69, 0x2c, 0x32, 0x1c, 0x4e, 0x5c, 0xbe, 0xbc, 0x1d, 0xa7, 0x6d,
	0xeb, 0x1a, 0x4e, 0x5e, 0xfd, 0x1e, 0xa1, 0xf9, 0xa7, 0xf3, 0x95, 0x3b, 0xc3, 0x5b, 0xfc, 0x1c,
	0xcd, 0xb4, 0xe1, 0x6d, 0x21, 0x4a, 0xe2, 0xc5, 0x5e, 0x12, 0xe6, 0xfe, 0x50, 0x6e, 0x4a, 0xfc,
	0x02, 0x85, 0x56, 0x90, 0xb4, 0xe1, 0x64, 0x64, 0xa5, 0x60, 0x68, 0x6c, 0x69, 0xc3, 0xf1, 0x1b,
	0x14, 0x76, 0x9a, 0xab, 0x42, 0xc8, 0x0a, 0xc8, 0x38, 0xf6, 0x92, 0xe8, 0xdd, 0x63, 0xe7, 0xa0,
	0xd3, 0xbd, 0xe6, 0x6a, 0x23, 0x2b, 0xc8, 0x83, 0xee, 0xfc, 0x85, 0x9f, 0x21, 0x5f, 0xf1, 0x86,
	0xaa, 0x9f, 0x64, 0xe2, 0x3c, 0x5c, 0x85, 0x57, 0xe8, 0x91, 0xd0, 0x85, 0x36, 0x54, 0x99, 0x42,
	0x42, 0xc9, 0xc9, 0x34, 0xf6, 0x92, 0x20, 0x8f, 0x84, 0xde, 0x0d, 0xbd, 0x2d, 0x94, 0x1c, 0xbf,
	0x42, 0x91, 0xd0, 0x05, 0x97, 0xa5, 0x23, 0x7c, 0x4b, 0x84, 0x42, 0x7f, 0x96, 0xa5, 0xd5, 0x9f,
	0x22, 0x1f, 0x68, 0xd1, 0xa9, 0x9a, 0xcc, 0xec, 0xdd, 0x53, 0xa0, 0x7b, 0x55, 0xe3, 0x04, 0x4d,
	0x24, 0x3f, 0x19, 0x12, 0xd8, 0xc7, 0x3d, 0xb9, 0x3c, 0xee, 0xdf, 0x7f, 0xcf, 0x2d, 0x81, 0xdf,
	0xa2, 0xa0, 0x55, 0xfc, 0x97, 0x80, 0x4e, 0x93, 0xf0, 0x1e, 0xfa, 0x2f, 0x85, 0x3f, 0xa0, 0x39,
	0xb4, 0x5c, 0x51, 0xc3, 0x5d, 0x00, 0xc8, 0x4e, 0x2d, 0x2e, 0x53, 0xdf, 0x9c, 0x66, 0x33, 0x88,
	0xe0, 0x5a, 0xac, 0xd4, 0x35, 0xfb, 0x2f, 0x35, 0xf4, 0xf8, 0x35, 0x9a, 0x0e, 0x89, 0x6a, 0xe2,
	0xc5, 0xe3, 0x3b, 0x6d, 0x1d, 0xf2, 0x9f, 0xe7, 0xe8, 0x61, 0x9e, 0x1f, 0xbf, 0xa2, 0x35, 0x83,
	0x26, 0x3d, 0x09, 0x2a, 0x8f, 0x92, 0xa6, 0x7d, 0xdf, 0x5f, 0x46, 0x6e, 0x16, 0xe5, 0xfb, 0xfa,
	0x28, 0xcc, 0x8f, 0xee, 0x90, 0x32, 0x68, 0xb2, 0x93, 0x64, 0x2c, 0x73, 0x54, 0x76, 0x43, 0x1d,
	0xdc, 0xea, 0xbd, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0xfe, 0xbe, 0x0c, 0x5e, 0xa5, 0x02, 0x00,
	0x00,
}
