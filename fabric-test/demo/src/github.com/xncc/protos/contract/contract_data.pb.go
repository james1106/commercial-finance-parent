// Code generated by protoc-gen-go.
// source: contract/contract_data.proto
// DO NOT EDIT!

package contract

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import protos "github.com/xncc/protos/common"
import _ "github.com/xncc/protos/configuration"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// ======================================融资订单数据=============================================
// 订单表单数据
type ContractFormData struct {
	// 发起申请方维护字段
	ExpectLoanAmount  int64 `protobuf:"varint,1,opt,name=expect_loan_amount,json=expectLoanAmount" json:"expect_loan_amount,omitempty"`
	ExpectLoanPeriod  int32 `protobuf:"varint,2,opt,name=expect_loan_period,json=expectLoanPeriod" json:"expect_loan_period,omitempty"`
	ExpectLoanRate    int64 `protobuf:"varint,3,opt,name=expect_loan_rate,json=expectLoanRate" json:"expect_loan_rate,omitempty"`
	ExpectLoanEndTime int64 `protobuf:"varint,4,opt,name=expect_loan_end_time,json=expectLoanEndTime" json:"expect_loan_end_time,omitempty"`
	// 最终放款方维护字段
	ConfirmLoanAmount  int64 `protobuf:"varint,5,opt,name=confirm_loan_amount,json=confirmLoanAmount" json:"confirm_loan_amount,omitempty"`
	ConfirmLoanPeriod  int32 `protobuf:"varint,6,opt,name=confirm_loan_period,json=confirmLoanPeriod" json:"confirm_loan_period,omitempty"`
	ConfirmLoanRate    int64 `protobuf:"varint,7,opt,name=confirm_loan_rate,json=confirmLoanRate" json:"confirm_loan_rate,omitempty"`
	ConfirmLoanEndTime int64 `protobuf:"varint,8,opt,name=confirm_loan_end_time,json=confirmLoanEndTime" json:"confirm_loan_end_time,omitempty"`
}

func (m *ContractFormData) Reset()                    { *m = ContractFormData{} }
func (m *ContractFormData) String() string            { return proto.CompactTextString(m) }
func (*ContractFormData) ProtoMessage()               {}
func (*ContractFormData) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

// 订单款项金额汇总
type ContractMoneyCount struct {
	// 放款
	NeedPayAmount  int64 `protobuf:"varint,1,opt,name=need_pay_amount,json=needPayAmount" json:"need_pay_amount,omitempty"`
	ExpensesAmount int64 `protobuf:"varint,2,opt,name=expenses_amount,json=expensesAmount" json:"expenses_amount,omitempty"`
	IncomeAmount   int64 `protobuf:"varint,3,opt,name=income_amount,json=incomeAmount" json:"income_amount,omitempty"`
	// 还款
	NeedPaybackLoanAmount int64 `protobuf:"varint,4,opt,name=need_payback_loan_amount,json=needPaybackLoanAmount" json:"need_payback_loan_amount,omitempty"`
	PaybackExpensesAmount int64 `protobuf:"varint,5,opt,name=payback_expenses_amount,json=paybackExpensesAmount" json:"payback_expenses_amount,omitempty"`
	PaybackIncomeAmount   int64 `protobuf:"varint,6,opt,name=payback_income_amount,json=paybackIncomeAmount" json:"payback_income_amount,omitempty"`
	// 所有在申请订单内发生的金额交易(转账)都应该在此处有明确的流水
	TransactionDetails []*ContractTransactionDetail `protobuf:"bytes,7,rep,name=transaction_details,json=transactionDetails" json:"transaction_details,omitempty"`
}

func (m *ContractMoneyCount) Reset()                    { *m = ContractMoneyCount{} }
func (m *ContractMoneyCount) String() string            { return proto.CompactTextString(m) }
func (*ContractMoneyCount) ProtoMessage()               {}
func (*ContractMoneyCount) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *ContractMoneyCount) GetTransactionDetails() []*ContractTransactionDetail {
	if m != nil {
		return m.TransactionDetails
	}
	return nil
}

// 订单款项转移金额流水
type ContractTransactionDetail struct {
	No               string                 `protobuf:"bytes,1,opt,name=no" json:"no,omitempty"`
	Expenses         string                 `protobuf:"bytes,2,opt,name=expenses" json:"expenses,omitempty"`
	ExpensesAmount   int64                  `protobuf:"varint,3,opt,name=expenses_amount,json=expensesAmount" json:"expenses_amount,omitempty"`
	ExpensesAccount  *protos.OrgBankAccount `protobuf:"bytes,4,opt,name=expenses_account,json=expensesAccount" json:"expenses_account,omitempty"`
	Income           string                 `protobuf:"bytes,5,opt,name=income" json:"income,omitempty"`
	IncomeAccount    *protos.OrgBankAccount `protobuf:"bytes,6,opt,name=income_account,json=incomeAccount" json:"income_account,omitempty"`
	TansactionRemark string                 `protobuf:"bytes,7,opt,name=tansaction_remark,json=tansactionRemark" json:"tansaction_remark,omitempty"`
	TansactionNotes  [][]byte               `protobuf:"bytes,8,rep,name=tansaction_notes,json=tansactionNotes,proto3" json:"tansaction_notes,omitempty"`
	TansactionTime   int64                  `protobuf:"varint,9,opt,name=tansaction_time,json=tansactionTime" json:"tansaction_time,omitempty"`
	IncomConfirm     bool                   `protobuf:"varint,10,opt,name=incom_confirm,json=incomConfirm" json:"incom_confirm,omitempty"`
}

func (m *ContractTransactionDetail) Reset()                    { *m = ContractTransactionDetail{} }
func (m *ContractTransactionDetail) String() string            { return proto.CompactTextString(m) }
func (*ContractTransactionDetail) ProtoMessage()               {}
func (*ContractTransactionDetail) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *ContractTransactionDetail) GetExpensesAccount() *protos.OrgBankAccount {
	if m != nil {
		return m.ExpensesAccount
	}
	return nil
}

func (m *ContractTransactionDetail) GetIncomeAccount() *protos.OrgBankAccount {
	if m != nil {
		return m.IncomeAccount
	}
	return nil
}

func init() {
	proto.RegisterType((*ContractFormData)(nil), "protos.ContractFormData")
	proto.RegisterType((*ContractMoneyCount)(nil), "protos.ContractMoneyCount")
	proto.RegisterType((*ContractTransactionDetail)(nil), "protos.ContractTransactionDetail")
}

func init() { proto.RegisterFile("contract/contract_data.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 611 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x94, 0xdb, 0x8f, 0xd2, 0x40,
	0x14, 0xc6, 0x03, 0x75, 0x59, 0x38, 0x7b, 0x81, 0x1d, 0xdc, 0xb5, 0x12, 0x93, 0xad, 0x98, 0x68,
	0xbd, 0xa4, 0x44, 0x4c, 0xf4, 0xc9, 0x07, 0x60, 0xd7, 0xc4, 0xc4, 0xcb, 0xa6, 0xd9, 0x27, 0x5f,
	0x9a, 0x61, 0x3a, 0x8b, 0x0d, 0x74, 0x86, 0xb4, 0x43, 0x80, 0x67, 0x5f, 0xfc, 0x73, 0xfc, 0x13,
	0x4d, 0xe7, 0x42, 0xa7, 0x64, 0xf5, 0x09, 0xfa, 0x9d, 0xdf, 0x4c, 0xbf, 0xf9, 0xce, 0x99, 0xc2,
	0x13, 0xc2, 0x99, 0xc8, 0x30, 0x11, 0x03, 0xf3, 0x27, 0x8a, 0xb1, 0xc0, 0xc1, 0x32, 0xe3, 0x82,
	0xa3, 0x86, 0xfc, 0xc9, 0x7b, 0x5d, 0xc2, 0xd3, 0x94, 0xb3, 0x81, 0xfa, 0x51, 0xc5, 0x9e, 0x47,
	0x38, 0xbb, 0x4b, 0x66, 0xab, 0x0c, 0x8b, 0x44, 0xd6, 0xd4, 0xfa, 0xbb, 0x05, 0x5f, 0x2b, 0xa2,
	0xff, 0xdb, 0x81, 0xce, 0x44, 0xcb, 0x9f, 0x78, 0x96, 0x5e, 0x61, 0x81, 0xd1, 0x1b, 0x40, 0x74,
	0xb3, 0xa4, 0x44, 0x44, 0x0b, 0x8e, 0x59, 0x84, 0x53, 0xbe, 0x62, 0xc2, 0xad, 0x79, 0x35, 0xdf,
	0x09, 0x3b, 0xaa, 0xf2, 0x85, 0x63, 0x36, 0x92, 0xfa, 0x3e, 0xbd, 0xa4, 0x59, 0xc2, 0x63, 0xb7,
	0xee, 0xd5, 0xfc, 0x03, 0x9b, 0xbe, 0x91, 0x3a, 0xf2, 0xa1, 0x63, 0xd3, 0x19, 0x16, 0xd4, 0x75,
	0xe4, 0xce, 0xa7, 0x25, 0x1b, 0x62, 0x41, 0xd1, 0x00, 0x1e, 0xda, 0x24, 0x65, 0x71, 0x24, 0x92,
	0x94, 0xba, 0x0f, 0x24, 0x7d, 0x56, 0xd2, 0xd7, 0x2c, 0xbe, 0x4d, 0x52, 0x8a, 0x02, 0xe8, 0xca,
	0xf3, 0x66, 0x69, 0xc5, 0xf7, 0x81, 0xe2, 0x75, 0xc9, 0x32, 0xbe, 0xcf, 0x6b, 0xe7, 0x0d, 0xe9,
	0xdc, 0xe6, 0xb5, 0xf5, 0x57, 0x70, 0x56, 0xe1, 0xa5, 0xf7, 0x43, 0xb9, 0x7b, 0xdb, 0xa2, 0xa5,
	0xf9, 0xb7, 0x70, 0x5e, 0x61, 0x77, 0xee, 0x9b, 0x92, 0x47, 0x16, 0xaf, 0xed, 0xf7, 0x7f, 0x39,
	0x80, 0x4c, 0x2b, 0xbe, 0x72, 0x46, 0xb7, 0x13, 0xe9, 0xf2, 0x39, 0xb4, 0x19, 0xa5, 0x71, 0xb4,
	0xc4, 0xdb, 0x6a, 0x27, 0x4e, 0x0a, 0xf9, 0x06, 0x6f, 0xf5, 0x69, 0x5e, 0x40, 0xbb, 0x88, 0x84,
	0xe5, 0x34, 0x37, 0x5c, 0xbd, 0xcc, 0xb5, 0x90, 0x35, 0xf8, 0x0c, 0x4e, 0x12, 0x46, 0x78, 0x4a,
	0x0d, 0xa6, 0xe2, 0x3f, 0x56, 0xa2, 0x86, 0x3e, 0x80, 0x6b, 0xde, 0x3a, 0xc5, 0x64, 0x5e, 0x09,
	0x54, 0x35, 0xe0, 0x5c, 0xbf, 0xbe, 0x28, 0x5b, 0xa1, 0xbe, 0x87, 0x47, 0x66, 0xcd, 0xbe, 0x1d,
	0xd5, 0x88, 0x73, 0x5d, 0xbe, 0xae, 0xba, 0x1a, 0x82, 0x29, 0x44, 0x55, 0x77, 0x0d, 0xb9, 0xaa,
	0xab, 0x8b, 0x9f, 0x6d, 0x93, 0x21, 0x74, 0x45, 0x86, 0x59, 0x8e, 0x49, 0x31, 0xde, 0x51, 0x4c,
	0x05, 0x4e, 0x16, 0xb9, 0x7b, 0xe8, 0x39, 0xfe, 0xd1, 0xf0, 0xa9, 0x9a, 0xf0, 0x3c, 0x30, 0x99,
	0xde, 0x96, 0xe8, 0x95, 0x24, 0x43, 0x24, 0xf6, 0xa5, 0xbc, 0xff, 0xc7, 0x81, 0xc7, 0xff, 0x5c,
	0x81, 0x4e, 0xa1, 0xce, 0xb8, 0xcc, 0xbf, 0x15, 0xd6, 0x19, 0x47, 0x3d, 0x68, 0x9a, 0x53, 0xca,
	0xb4, 0x5b, 0xe1, 0xee, 0xf9, 0xbe, 0x86, 0x38, 0xf7, 0x36, 0x64, 0xa4, 0xae, 0x84, 0x02, 0x09,
	0xd9, 0x65, 0x7c, 0x34, 0xbc, 0x30, 0x67, 0xf8, 0x9e, 0xcd, 0xc6, 0x98, 0xcd, 0x47, 0xaa, 0x1a,
	0xee, 0x36, 0xd6, 0x02, 0xba, 0x80, 0x86, 0x4a, 0x4d, 0x86, 0xdc, 0x0a, 0xf5, 0x13, 0xfa, 0x08,
	0xa7, 0x26, 0x4d, 0xbd, 0x71, 0xe3, 0xbf, 0x1b, 0xeb, 0xc9, 0x30, 0xdb, 0xbe, 0x86, 0x33, 0x51,
	0xe6, 0x9b, 0xd1, 0x14, 0x67, 0x73, 0x39, 0xf1, 0xad, 0xb0, 0x53, 0x16, 0x42, 0xa9, 0xa3, 0x97,
	0x60, 0x69, 0x11, 0xe3, 0x82, 0xe6, 0x6e, 0xd3, 0x73, 0xfc, 0xe3, 0xb0, 0x5d, 0xea, 0xdf, 0x0a,
	0xb9, 0x88, 0xc6, 0x42, 0xe5, 0xbd, 0x68, 0xa9, 0x68, 0x4a, 0x59, 0x5e, 0x69, 0x33, 0xab, 0x91,
	0xbe, 0x2f, 0x2e, 0x78, 0x35, 0xbf, 0xa9, 0x67, 0x75, 0xa2, 0xb4, 0xf1, 0x18, 0x2e, 0x09, 0x4f,
	0x83, 0x4d, 0x82, 0xd9, 0x8c, 0xe1, 0x60, 0xbd, 0x5e, 0x9b, 0xd3, 0x99, 0x0f, 0xde, 0x8f, 0xcb,
	0x59, 0x22, 0x7e, 0xae, 0xa6, 0x01, 0xe1, 0xe9, 0x60, 0xc3, 0x08, 0x19, 0x28, 0x60, 0xf7, 0x45,
	0x9c, 0xaa, 0xcf, 0xe8, 0xbb, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0c, 0xb2, 0x43, 0xe3, 0x6d,
	0x05, 0x00, 0x00,
}
