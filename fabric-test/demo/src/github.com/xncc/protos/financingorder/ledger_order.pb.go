// Code generated by protoc-gen-go.
// source: financingorder/ledger_order.proto
// DO NOT EDIT!

package financingorder

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// ======================================三方账本融资申请订单数据=============================================
// 供应商到保理融资申请订单
type FinancingOrder struct {
	OrderNo           string              `protobuf:"bytes,1,opt,name=order_no,json=orderNo" json:"order_no,omitempty"`
	Supplier          *AppVo              `protobuf:"bytes,2,opt,name=supplier" json:"supplier,omitempty"`
	Enterprise        *AppVo              `protobuf:"bytes,3,opt,name=enterprise" json:"enterprise,omitempty"`
	BankFactor        *AppVo              `protobuf:"bytes,4,opt,name=bank_factor,json=bankFactor" json:"bank_factor,omitempty"`
	OrderData         *OrderFormData      `protobuf:"bytes,5,opt,name=order_data,json=orderData" json:"order_data,omitempty"`
	Invoices          []*FinancingInvoice `protobuf:"bytes,6,rep,name=invoices" json:"invoices,omitempty"`
	OrderFilesEncrypt []*LedgerFile       `protobuf:"bytes,7,rep,name=order_files_encrypt,json=orderFilesEncrypt" json:"order_files_encrypt,omitempty"`
	OrderMoneyCount   *OrderMoneyCount    `protobuf:"bytes,8,opt,name=order_money_count,json=orderMoneyCount" json:"order_money_count,omitempty"`
	OrderStatus       *OrderStatus        `protobuf:"bytes,9,opt,name=order_status,json=orderStatus" json:"order_status,omitempty"`
	OperateInfo       *OperateInfo        `protobuf:"bytes,10,opt,name=operate_info,json=operateInfo" json:"operate_info,omitempty"`
}

func (m *FinancingOrder) Reset()                    { *m = FinancingOrder{} }
func (m *FinancingOrder) String() string            { return proto.CompactTextString(m) }
func (*FinancingOrder) ProtoMessage()               {}
func (*FinancingOrder) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *FinancingOrder) GetOrderNo() string {
	if m != nil {
		return m.OrderNo
	}
	return ""
}

func (m *FinancingOrder) GetSupplier() *AppVo {
	if m != nil {
		return m.Supplier
	}
	return nil
}

func (m *FinancingOrder) GetEnterprise() *AppVo {
	if m != nil {
		return m.Enterprise
	}
	return nil
}

func (m *FinancingOrder) GetBankFactor() *AppVo {
	if m != nil {
		return m.BankFactor
	}
	return nil
}

func (m *FinancingOrder) GetOrderData() *OrderFormData {
	if m != nil {
		return m.OrderData
	}
	return nil
}

func (m *FinancingOrder) GetInvoices() []*FinancingInvoice {
	if m != nil {
		return m.Invoices
	}
	return nil
}

func (m *FinancingOrder) GetOrderFilesEncrypt() []*LedgerFile {
	if m != nil {
		return m.OrderFilesEncrypt
	}
	return nil
}

func (m *FinancingOrder) GetOrderMoneyCount() *OrderMoneyCount {
	if m != nil {
		return m.OrderMoneyCount
	}
	return nil
}

func (m *FinancingOrder) GetOrderStatus() *OrderStatus {
	if m != nil {
		return m.OrderStatus
	}
	return nil
}

func (m *FinancingOrder) GetOperateInfo() *OperateInfo {
	if m != nil {
		return m.OperateInfo
	}
	return nil
}

// 订单表单数据
type OrderFormData struct {
	// 发起申请方维护字段
	ExpectAmount      int64                      `protobuf:"varint,1,opt,name=expect_amount,json=expectAmount" json:"expect_amount,omitempty"`
	FinancingPeriod   int32                      `protobuf:"varint,2,opt,name=financing_period,json=financingPeriod" json:"financing_period,omitempty"`
	ExpectExpiredTime *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=expect_expired_time,json=expectExpiredTime" json:"expect_expired_time,omitempty"`
	// 最终放款方维护字段
	ConfirmedAmount      int64                      `protobuf:"varint,4,opt,name=confirmed_amount,json=confirmedAmount" json:"confirmed_amount,omitempty"`
	ConfirmedExpiredTime *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=confirmed_expired_time,json=confirmedExpiredTime" json:"confirmed_expired_time,omitempty"`
	ConfirmedRate        int64                      `protobuf:"varint,6,opt,name=confirmed_rate,json=confirmedRate" json:"confirmed_rate,omitempty"`
	OrderFiles           []*LedgerFile              `protobuf:"bytes,7,rep,name=order_files,json=orderFiles" json:"order_files,omitempty"`
}

func (m *OrderFormData) Reset()                    { *m = OrderFormData{} }
func (m *OrderFormData) String() string            { return proto.CompactTextString(m) }
func (*OrderFormData) ProtoMessage()               {}
func (*OrderFormData) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *OrderFormData) GetExpectAmount() int64 {
	if m != nil {
		return m.ExpectAmount
	}
	return 0
}

func (m *OrderFormData) GetFinancingPeriod() int32 {
	if m != nil {
		return m.FinancingPeriod
	}
	return 0
}

func (m *OrderFormData) GetExpectExpiredTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.ExpectExpiredTime
	}
	return nil
}

func (m *OrderFormData) GetConfirmedAmount() int64 {
	if m != nil {
		return m.ConfirmedAmount
	}
	return 0
}

func (m *OrderFormData) GetConfirmedExpiredTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.ConfirmedExpiredTime
	}
	return nil
}

func (m *OrderFormData) GetConfirmedRate() int64 {
	if m != nil {
		return m.ConfirmedRate
	}
	return 0
}

func (m *OrderFormData) GetOrderFiles() []*LedgerFile {
	if m != nil {
		return m.OrderFiles
	}
	return nil
}

// 一张发票的融资信息
type FinancingInvoice struct {
	Invoice               *Invoice                   `protobuf:"bytes,1,opt,name=invoice" json:"invoice,omitempty"`
	ExpectAmount          int64                      `protobuf:"varint,2,opt,name=expect_amount,json=expectAmount" json:"expect_amount,omitempty"`
	ConfirmAmount         int64                      `protobuf:"varint,3,opt,name=confirm_amount,json=confirmAmount" json:"confirm_amount,omitempty"`
	ConfirmRate           int64                      `protobuf:"varint,4,opt,name=confirm_rate,json=confirmRate" json:"confirm_rate,omitempty"`
	ConfirmPayTime        *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=confirm_pay_time,json=confirmPayTime" json:"confirm_pay_time,omitempty"`
	ConfirmReturnTime     *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=confirm_return_time,json=confirmReturnTime" json:"confirm_return_time,omitempty"`
	ConfirmEndTime        *google_protobuf.Timestamp `protobuf:"bytes,7,opt,name=confirm_end_time,json=confirmEndTime" json:"confirm_end_time,omitempty"`
	ConfirmRateDesc       string                     `protobuf:"bytes,8,opt,name=confirm_rate_desc,json=confirmRateDesc" json:"confirm_rate_desc,omitempty"`
	ConfirmUrgeReturnDesc string                     `protobuf:"bytes,9,opt,name=confirm_urge_return_desc,json=confirmUrgeReturnDesc" json:"confirm_urge_return_desc,omitempty"`
}

func (m *FinancingInvoice) Reset()                    { *m = FinancingInvoice{} }
func (m *FinancingInvoice) String() string            { return proto.CompactTextString(m) }
func (*FinancingInvoice) ProtoMessage()               {}
func (*FinancingInvoice) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *FinancingInvoice) GetInvoice() *Invoice {
	if m != nil {
		return m.Invoice
	}
	return nil
}

func (m *FinancingInvoice) GetExpectAmount() int64 {
	if m != nil {
		return m.ExpectAmount
	}
	return 0
}

func (m *FinancingInvoice) GetConfirmAmount() int64 {
	if m != nil {
		return m.ConfirmAmount
	}
	return 0
}

func (m *FinancingInvoice) GetConfirmRate() int64 {
	if m != nil {
		return m.ConfirmRate
	}
	return 0
}

func (m *FinancingInvoice) GetConfirmPayTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.ConfirmPayTime
	}
	return nil
}

func (m *FinancingInvoice) GetConfirmReturnTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.ConfirmReturnTime
	}
	return nil
}

func (m *FinancingInvoice) GetConfirmEndTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.ConfirmEndTime
	}
	return nil
}

func (m *FinancingInvoice) GetConfirmRateDesc() string {
	if m != nil {
		return m.ConfirmRateDesc
	}
	return ""
}

func (m *FinancingInvoice) GetConfirmUrgeReturnDesc() string {
	if m != nil {
		return m.ConfirmUrgeReturnDesc
	}
	return ""
}

// 供应商发票信息
type Invoice struct {
	InvoiceNo     string                     `protobuf:"bytes,1,opt,name=invoice_no,json=invoiceNo" json:"invoice_no,omitempty"`
	InvoiceAmount int64                      `protobuf:"varint,2,opt,name=invoice_amount,json=invoiceAmount" json:"invoice_amount,omitempty"`
	InvoiceTime   *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=invoice_time,json=invoiceTime" json:"invoice_time,omitempty"`
	Supplier      *AppVo                     `protobuf:"bytes,4,opt,name=supplier" json:"supplier,omitempty"`
	Enterprise    *AppVo                     `protobuf:"bytes,5,opt,name=enterprise" json:"enterprise,omitempty"`
	Remark        string                     `protobuf:"bytes,6,opt,name=remark" json:"remark,omitempty"`
	Notes         []*LedgerFile              `protobuf:"bytes,7,rep,name=notes" json:"notes,omitempty"`
	OperateInfo   *OperateInfo               `protobuf:"bytes,8,opt,name=operate_info,json=operateInfo" json:"operate_info,omitempty"`
}

func (m *Invoice) Reset()                    { *m = Invoice{} }
func (m *Invoice) String() string            { return proto.CompactTextString(m) }
func (*Invoice) ProtoMessage()               {}
func (*Invoice) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *Invoice) GetInvoiceNo() string {
	if m != nil {
		return m.InvoiceNo
	}
	return ""
}

func (m *Invoice) GetInvoiceAmount() int64 {
	if m != nil {
		return m.InvoiceAmount
	}
	return 0
}

func (m *Invoice) GetInvoiceTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.InvoiceTime
	}
	return nil
}

func (m *Invoice) GetSupplier() *AppVo {
	if m != nil {
		return m.Supplier
	}
	return nil
}

func (m *Invoice) GetEnterprise() *AppVo {
	if m != nil {
		return m.Enterprise
	}
	return nil
}

func (m *Invoice) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *Invoice) GetNotes() []*LedgerFile {
	if m != nil {
		return m.Notes
	}
	return nil
}

func (m *Invoice) GetOperateInfo() *OperateInfo {
	if m != nil {
		return m.OperateInfo
	}
	return nil
}

// 订单款项金额汇总
type OrderMoneyCount struct {
	// 下面为结算字段,具体流水记录到交易明细,此处体现订单总金额
	// 放款
	NeedPayAmount  int64 `protobuf:"varint,1,opt,name=need_pay_amount,json=needPayAmount" json:"need_pay_amount,omitempty"`
	ExpensesAmount int64 `protobuf:"varint,2,opt,name=expenses_amount,json=expensesAmount" json:"expenses_amount,omitempty"`
	IncomeAmount   int64 `protobuf:"varint,3,opt,name=income_amount,json=incomeAmount" json:"income_amount,omitempty"`
	// 还款
	NeedPaybackLoanAmount int64 `protobuf:"varint,4,opt,name=need_payback_loan_amount,json=needPaybackLoanAmount" json:"need_payback_loan_amount,omitempty"`
	PaybackExpensesAmount int64 `protobuf:"varint,5,opt,name=payback_expenses_amount,json=paybackExpensesAmount" json:"payback_expenses_amount,omitempty"`
	PaybackIncomeAmount   int64 `protobuf:"varint,6,opt,name=payback_income_amount,json=paybackIncomeAmount" json:"payback_income_amount,omitempty"`
	// 所有在申请订单内发生的金额交易(转账)都应该在此处有明确的流水
	TransactionDetails []*OrderTransactionDetail `protobuf:"bytes,7,rep,name=transaction_details,json=transactionDetails" json:"transaction_details,omitempty"`
}

func (m *OrderMoneyCount) Reset()                    { *m = OrderMoneyCount{} }
func (m *OrderMoneyCount) String() string            { return proto.CompactTextString(m) }
func (*OrderMoneyCount) ProtoMessage()               {}
func (*OrderMoneyCount) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *OrderMoneyCount) GetNeedPayAmount() int64 {
	if m != nil {
		return m.NeedPayAmount
	}
	return 0
}

func (m *OrderMoneyCount) GetExpensesAmount() int64 {
	if m != nil {
		return m.ExpensesAmount
	}
	return 0
}

func (m *OrderMoneyCount) GetIncomeAmount() int64 {
	if m != nil {
		return m.IncomeAmount
	}
	return 0
}

func (m *OrderMoneyCount) GetNeedPaybackLoanAmount() int64 {
	if m != nil {
		return m.NeedPaybackLoanAmount
	}
	return 0
}

func (m *OrderMoneyCount) GetPaybackExpensesAmount() int64 {
	if m != nil {
		return m.PaybackExpensesAmount
	}
	return 0
}

func (m *OrderMoneyCount) GetPaybackIncomeAmount() int64 {
	if m != nil {
		return m.PaybackIncomeAmount
	}
	return 0
}

func (m *OrderMoneyCount) GetTransactionDetails() []*OrderTransactionDetail {
	if m != nil {
		return m.TransactionDetails
	}
	return nil
}

// 订单款项转移金额流水
type OrderTransactionDetail struct {
	Expenses         *AppVo                     `protobuf:"bytes,1,opt,name=expenses" json:"expenses,omitempty"`
	ExpensesAmount   int64                      `protobuf:"varint,2,opt,name=expenses_amount,json=expensesAmount" json:"expenses_amount,omitempty"`
	ExpensesAccount  *OrgBankAccount            `protobuf:"bytes,3,opt,name=expenses_account,json=expensesAccount" json:"expenses_account,omitempty"`
	Income           *AppVo                     `protobuf:"bytes,4,opt,name=income" json:"income,omitempty"`
	IncomeAccount    *OrgBankAccount            `protobuf:"bytes,6,opt,name=income_account,json=incomeAccount" json:"income_account,omitempty"`
	TansactionRemark string                     `protobuf:"bytes,7,opt,name=tansaction_remark,json=tansactionRemark" json:"tansaction_remark,omitempty"`
	TansactionNotes  []*LedgerFile              `protobuf:"bytes,8,rep,name=tansaction_notes,json=tansactionNotes" json:"tansaction_notes,omitempty"`
	TansactionTime   *google_protobuf.Timestamp `protobuf:"bytes,9,opt,name=tansaction_time,json=tansactionTime" json:"tansaction_time,omitempty"`
	IncomConfirm     bool                       `protobuf:"varint,10,opt,name=incom_confirm,json=incomConfirm" json:"incom_confirm,omitempty"`
	OperateInfo      *OperateInfo               `protobuf:"bytes,11,opt,name=operate_info,json=operateInfo" json:"operate_info,omitempty"`
}

func (m *OrderTransactionDetail) Reset()                    { *m = OrderTransactionDetail{} }
func (m *OrderTransactionDetail) String() string            { return proto.CompactTextString(m) }
func (*OrderTransactionDetail) ProtoMessage()               {}
func (*OrderTransactionDetail) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *OrderTransactionDetail) GetExpenses() *AppVo {
	if m != nil {
		return m.Expenses
	}
	return nil
}

func (m *OrderTransactionDetail) GetExpensesAmount() int64 {
	if m != nil {
		return m.ExpensesAmount
	}
	return 0
}

func (m *OrderTransactionDetail) GetExpensesAccount() *OrgBankAccount {
	if m != nil {
		return m.ExpensesAccount
	}
	return nil
}

func (m *OrderTransactionDetail) GetIncome() *AppVo {
	if m != nil {
		return m.Income
	}
	return nil
}

func (m *OrderTransactionDetail) GetIncomeAccount() *OrgBankAccount {
	if m != nil {
		return m.IncomeAccount
	}
	return nil
}

func (m *OrderTransactionDetail) GetTansactionRemark() string {
	if m != nil {
		return m.TansactionRemark
	}
	return ""
}

func (m *OrderTransactionDetail) GetTansactionNotes() []*LedgerFile {
	if m != nil {
		return m.TansactionNotes
	}
	return nil
}

func (m *OrderTransactionDetail) GetTansactionTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.TansactionTime
	}
	return nil
}

func (m *OrderTransactionDetail) GetIncomConfirm() bool {
	if m != nil {
		return m.IncomConfirm
	}
	return false
}

func (m *OrderTransactionDetail) GetOperateInfo() *OperateInfo {
	if m != nil {
		return m.OperateInfo
	}
	return nil
}

// 订单状态
type OrderStatus struct {
	CurrentStep    *FinancingOrderStep   `protobuf:"bytes,1,opt,name=current_step,json=currentStep" json:"current_step,omitempty"`
	CheckDatas     []*OrderStepCheckData `protobuf:"bytes,2,rep,name=check_datas,json=checkDatas" json:"check_datas,omitempty"`
	CheckFlowInfos []*OrderCheckFlowInfo `protobuf:"bytes,3,rep,name=check_flow_infos,json=checkFlowInfos" json:"check_flow_infos,omitempty"`
	StepHistory    []*FinancingOrderStep `protobuf:"bytes,5,rep,name=step_history,json=stepHistory" json:"step_history,omitempty"`
}

func (m *OrderStatus) Reset()                    { *m = OrderStatus{} }
func (m *OrderStatus) String() string            { return proto.CompactTextString(m) }
func (*OrderStatus) ProtoMessage()               {}
func (*OrderStatus) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *OrderStatus) GetCurrentStep() *FinancingOrderStep {
	if m != nil {
		return m.CurrentStep
	}
	return nil
}

func (m *OrderStatus) GetCheckDatas() []*OrderStepCheckData {
	if m != nil {
		return m.CheckDatas
	}
	return nil
}

func (m *OrderStatus) GetCheckFlowInfos() []*OrderCheckFlowInfo {
	if m != nil {
		return m.CheckFlowInfos
	}
	return nil
}

func (m *OrderStatus) GetStepHistory() []*FinancingOrderStep {
	if m != nil {
		return m.StepHistory
	}
	return nil
}

// ========================================银行保理双方账本数据定义===========================================
// 融资申请订单
// 保理到银行贷款融资申请订单
type BankLoanOrder struct {
	OrderNo               string                  `protobuf:"bytes,1,opt,name=order_no,json=orderNo" json:"order_no,omitempty"`
	BankFactor            *AppVo                  `protobuf:"bytes,2,opt,name=bank_factor,json=bankFactor" json:"bank_factor,omitempty"`
	BankInfo              *AppVo                  `protobuf:"bytes,3,opt,name=bank_info,json=bankInfo" json:"bank_info,omitempty"`
	OrderData             *OrderFormData          `protobuf:"bytes,4,opt,name=order_data,json=orderData" json:"order_data,omitempty"`
	FinancingOrderReviews []*FinancingOrderReview `protobuf:"bytes,5,rep,name=financing_order_reviews,json=financingOrderReviews" json:"financing_order_reviews,omitempty"`
	OrderMoneyCount       *OrderMoneyCount        `protobuf:"bytes,6,opt,name=order_money_count,json=orderMoneyCount" json:"order_money_count,omitempty"`
	OrderStatus           *OrderStatus            `protobuf:"bytes,7,opt,name=order_status,json=orderStatus" json:"order_status,omitempty"`
	OperateInfo           *OperateInfo            `protobuf:"bytes,8,opt,name=operate_info,json=operateInfo" json:"operate_info,omitempty"`
}

func (m *BankLoanOrder) Reset()                    { *m = BankLoanOrder{} }
func (m *BankLoanOrder) String() string            { return proto.CompactTextString(m) }
func (*BankLoanOrder) ProtoMessage()               {}
func (*BankLoanOrder) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *BankLoanOrder) GetOrderNo() string {
	if m != nil {
		return m.OrderNo
	}
	return ""
}

func (m *BankLoanOrder) GetBankFactor() *AppVo {
	if m != nil {
		return m.BankFactor
	}
	return nil
}

func (m *BankLoanOrder) GetBankInfo() *AppVo {
	if m != nil {
		return m.BankInfo
	}
	return nil
}

func (m *BankLoanOrder) GetOrderData() *OrderFormData {
	if m != nil {
		return m.OrderData
	}
	return nil
}

func (m *BankLoanOrder) GetFinancingOrderReviews() []*FinancingOrderReview {
	if m != nil {
		return m.FinancingOrderReviews
	}
	return nil
}

func (m *BankLoanOrder) GetOrderMoneyCount() *OrderMoneyCount {
	if m != nil {
		return m.OrderMoneyCount
	}
	return nil
}

func (m *BankLoanOrder) GetOrderStatus() *OrderStatus {
	if m != nil {
		return m.OrderStatus
	}
	return nil
}

func (m *BankLoanOrder) GetOperateInfo() *OperateInfo {
	if m != nil {
		return m.OperateInfo
	}
	return nil
}

// 保理到银行贷款融资申请订单质押的供应商融资申请订单
type FinancingOrderReview struct {
	OrderNo          string                     `protobuf:"bytes,1,opt,name=order_no,json=orderNo" json:"order_no,omitempty"`
	OrderAmount      int64                      `protobuf:"varint,2,opt,name=order_amount,json=orderAmount" json:"order_amount,omitempty"`
	FinancingPeriod  int32                      `protobuf:"varint,3,opt,name=financing_period,json=financingPeriod" json:"financing_period,omitempty"`
	OrderExpiredTime *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=order_expired_time,json=orderExpiredTime" json:"order_expired_time,omitempty"`
	// 保理申请的融资金额
	ExpectAmount int64 `protobuf:"varint,5,opt,name=expect_amount,json=expectAmount" json:"expect_amount,omitempty"`
	ExpectRate   int64 `protobuf:"varint,6,opt,name=expect_rate,json=expectRate" json:"expect_rate,omitempty"`
	// 银行审批确认的融资金额
	ConfirmAmount      int64                      `protobuf:"varint,7,opt,name=confirm_amount,json=confirmAmount" json:"confirm_amount,omitempty"`
	ConfirmRate        int64                      `protobuf:"varint,8,opt,name=confirm_rate,json=confirmRate" json:"confirm_rate,omitempty"`
	Supplier           *AppVo                     `protobuf:"bytes,9,opt,name=supplier" json:"supplier,omitempty"`
	Enterprise         *AppVo                     `protobuf:"bytes,10,opt,name=enterprise" json:"enterprise,omitempty"`
	BankFactor         *AppVo                     `protobuf:"bytes,11,opt,name=bank_factor,json=bankFactor" json:"bank_factor,omitempty"`
	ConfirmExpiredTime *google_protobuf.Timestamp `protobuf:"bytes,12,opt,name=confirm_expired_time,json=confirmExpiredTime" json:"confirm_expired_time,omitempty"`
}

func (m *FinancingOrderReview) Reset()                    { *m = FinancingOrderReview{} }
func (m *FinancingOrderReview) String() string            { return proto.CompactTextString(m) }
func (*FinancingOrderReview) ProtoMessage()               {}
func (*FinancingOrderReview) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *FinancingOrderReview) GetOrderNo() string {
	if m != nil {
		return m.OrderNo
	}
	return ""
}

func (m *FinancingOrderReview) GetOrderAmount() int64 {
	if m != nil {
		return m.OrderAmount
	}
	return 0
}

func (m *FinancingOrderReview) GetFinancingPeriod() int32 {
	if m != nil {
		return m.FinancingPeriod
	}
	return 0
}

func (m *FinancingOrderReview) GetOrderExpiredTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.OrderExpiredTime
	}
	return nil
}

func (m *FinancingOrderReview) GetExpectAmount() int64 {
	if m != nil {
		return m.ExpectAmount
	}
	return 0
}

func (m *FinancingOrderReview) GetExpectRate() int64 {
	if m != nil {
		return m.ExpectRate
	}
	return 0
}

func (m *FinancingOrderReview) GetConfirmAmount() int64 {
	if m != nil {
		return m.ConfirmAmount
	}
	return 0
}

func (m *FinancingOrderReview) GetConfirmRate() int64 {
	if m != nil {
		return m.ConfirmRate
	}
	return 0
}

func (m *FinancingOrderReview) GetSupplier() *AppVo {
	if m != nil {
		return m.Supplier
	}
	return nil
}

func (m *FinancingOrderReview) GetEnterprise() *AppVo {
	if m != nil {
		return m.Enterprise
	}
	return nil
}

func (m *FinancingOrderReview) GetBankFactor() *AppVo {
	if m != nil {
		return m.BankFactor
	}
	return nil
}

func (m *FinancingOrderReview) GetConfirmExpiredTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.ConfirmExpiredTime
	}
	return nil
}

// ==============================订单流程记录=====================================================
// 订单审核流程信息
type OrderCheckFlowInfo struct {
	OrderStep      *FinancingOrderStep `protobuf:"bytes,1,opt,name=order_step,json=orderStep" json:"order_step,omitempty"`
	CheckFlowDatas *OrderCheckFlowData `protobuf:"bytes,2,opt,name=check_flow_datas,json=checkFlowDatas" json:"check_flow_datas,omitempty"`
}

func (m *OrderCheckFlowInfo) Reset()                    { *m = OrderCheckFlowInfo{} }
func (m *OrderCheckFlowInfo) String() string            { return proto.CompactTextString(m) }
func (*OrderCheckFlowInfo) ProtoMessage()               {}
func (*OrderCheckFlowInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *OrderCheckFlowInfo) GetOrderStep() *FinancingOrderStep {
	if m != nil {
		return m.OrderStep
	}
	return nil
}

func (m *OrderCheckFlowInfo) GetCheckFlowDatas() *OrderCheckFlowData {
	if m != nil {
		return m.CheckFlowDatas
	}
	return nil
}

// 订单审核流程数据
type OrderCheckFlowData struct {
	CheckApp        *AppVo                     `protobuf:"bytes,1,opt,name=check_app,json=checkApp" json:"check_app,omitempty"`
	CheckUserName   string                     `protobuf:"bytes,2,opt,name=check_user_name,json=checkUserName" json:"check_user_name,omitempty"`
	CheckUserMobile string                     `protobuf:"bytes,3,opt,name=check_user_mobile,json=checkUserMobile" json:"check_user_mobile,omitempty"`
	CheckTime       *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=check_time,json=checkTime" json:"check_time,omitempty"`
	CheckIp         string                     `protobuf:"bytes,5,opt,name=check_ip,json=checkIp" json:"check_ip,omitempty"`
	Status          string                     `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	Remark          string                     `protobuf:"bytes,7,opt,name=remark" json:"remark,omitempty"`
}

func (m *OrderCheckFlowData) Reset()                    { *m = OrderCheckFlowData{} }
func (m *OrderCheckFlowData) String() string            { return proto.CompactTextString(m) }
func (*OrderCheckFlowData) ProtoMessage()               {}
func (*OrderCheckFlowData) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *OrderCheckFlowData) GetCheckApp() *AppVo {
	if m != nil {
		return m.CheckApp
	}
	return nil
}

func (m *OrderCheckFlowData) GetCheckUserName() string {
	if m != nil {
		return m.CheckUserName
	}
	return ""
}

func (m *OrderCheckFlowData) GetCheckUserMobile() string {
	if m != nil {
		return m.CheckUserMobile
	}
	return ""
}

func (m *OrderCheckFlowData) GetCheckTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.CheckTime
	}
	return nil
}

func (m *OrderCheckFlowData) GetCheckIp() string {
	if m != nil {
		return m.CheckIp
	}
	return ""
}

func (m *OrderCheckFlowData) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *OrderCheckFlowData) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

// 具体阶段的检查确认项
type OrderStepCheckData struct {
	CurrentStep *FinancingOrderStep `protobuf:"bytes,1,opt,name=current_step,json=currentStep" json:"current_step,omitempty"`
	CheckDatas  []*CheckData        `protobuf:"bytes,2,rep,name=check_datas,json=checkDatas" json:"check_datas,omitempty"`
}

func (m *OrderStepCheckData) Reset()                    { *m = OrderStepCheckData{} }
func (m *OrderStepCheckData) String() string            { return proto.CompactTextString(m) }
func (*OrderStepCheckData) ProtoMessage()               {}
func (*OrderStepCheckData) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *OrderStepCheckData) GetCurrentStep() *FinancingOrderStep {
	if m != nil {
		return m.CurrentStep
	}
	return nil
}

func (m *OrderStepCheckData) GetCheckDatas() []*CheckData {
	if m != nil {
		return m.CheckDatas
	}
	return nil
}

// 检查项的内容
type CheckData struct {
	Org   *AppVo `protobuf:"bytes,1,opt,name=org" json:"org,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Value string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *CheckData) Reset()                    { *m = CheckData{} }
func (m *CheckData) String() string            { return proto.CompactTextString(m) }
func (*CheckData) ProtoMessage()               {}
func (*CheckData) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *CheckData) GetOrg() *AppVo {
	if m != nil {
		return m.Org
	}
	return nil
}

func (m *CheckData) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CheckData) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*FinancingOrder)(nil), "protos.FinancingOrder")
	proto.RegisterType((*OrderFormData)(nil), "protos.OrderFormData")
	proto.RegisterType((*FinancingInvoice)(nil), "protos.FinancingInvoice")
	proto.RegisterType((*Invoice)(nil), "protos.Invoice")
	proto.RegisterType((*OrderMoneyCount)(nil), "protos.OrderMoneyCount")
	proto.RegisterType((*OrderTransactionDetail)(nil), "protos.OrderTransactionDetail")
	proto.RegisterType((*OrderStatus)(nil), "protos.OrderStatus")
	proto.RegisterType((*BankLoanOrder)(nil), "protos.BankLoanOrder")
	proto.RegisterType((*FinancingOrderReview)(nil), "protos.FinancingOrderReview")
	proto.RegisterType((*OrderCheckFlowInfo)(nil), "protos.OrderCheckFlowInfo")
	proto.RegisterType((*OrderCheckFlowData)(nil), "protos.OrderCheckFlowData")
	proto.RegisterType((*OrderStepCheckData)(nil), "protos.OrderStepCheckData")
	proto.RegisterType((*CheckData)(nil), "protos.CheckData")
}

func init() { proto.RegisterFile("financingorder/ledger_order.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 1532 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x58, 0x4b, 0x6f, 0xdb, 0x46,
	0x10, 0x86, 0xf5, 0xe6, 0xd0, 0xb2, 0xec, 0xf5, 0x23, 0x8c, 0xfb, 0x48, 0xa2, 0xc0, 0xad, 0x93,
	0xa2, 0x32, 0xe0, 0x04, 0x09, 0x8a, 0x22, 0x07, 0xc7, 0x0f, 0xc4, 0x41, 0xe2, 0x18, 0x6c, 0x52,
	0x14, 0xbd, 0x10, 0x6b, 0x6a, 0xa5, 0x10, 0x96, 0x76, 0x09, 0x92, 0x8a, 0xed, 0x7b, 0x81, 0xde,
	0x7a, 0xeb, 0x25, 0xd7, 0xfe, 0x82, 0xfe, 0x8a, 0xfe, 0x8f, 0xde, 0xfa, 0x23, 0x0a, 0x14, 0x3b,
	0xbb, 0x2b, 0x92, 0x12, 0x63, 0x29, 0xcd, 0xc9, 0xdc, 0x99, 0x6f, 0x76, 0x67, 0xe7, 0xb5, 0x9f,
	0x05, 0x77, 0x7a, 0x01, 0xa7, 0xdc, 0x0f, 0x78, 0x5f, 0x44, 0x5d, 0x16, 0xed, 0x0c, 0x58, 0xb7,
	0xcf, 0x22, 0x0f, 0x17, 0x9d, 0x30, 0x12, 0x89, 0x20, 0x35, 0xfc, 0x13, 0x6f, 0xde, 0xea, 0x0b,
	0xd1, 0x1f, 0xb0, 0x1d, 0x5c, 0x9e, 0x8d, 0x7a, 0x3b, 0x49, 0x30, 0x64, 0x71, 0x42, 0x87, 0xa1,
	0x02, 0x6e, 0x7e, 0x36, 0xb1, 0x97, 0x2f, 0x86, 0x43, 0xc1, 0xb5, 0xb2, 0x3d, 0xa5, 0xe4, 0xbd,
	0xa0, 0x3f, 0x8a, 0x68, 0x12, 0x18, 0x4c, 0xfb, 0x7d, 0x05, 0x96, 0x8e, 0x0c, 0xec, 0x95, 0x84,
	0x91, 0x9b, 0xd0, 0x40, 0xbc, 0xc7, 0x85, 0xb3, 0x70, 0x7b, 0x61, 0xdb, 0x72, 0xeb, 0xb8, 0x3e,
	0x11, 0xe4, 0x1e, 0x34, 0xe2, 0x51, 0x18, 0x0e, 0x02, 0x16, 0x39, 0xa5, 0xdb, 0x0b, 0xdb, 0xf6,
	0x6e, 0x53, 0xed, 0x13, 0x77, 0xf6, 0xc2, 0xf0, 0x47, 0xe1, 0x8e, 0xd5, 0xe4, 0x5b, 0x00, 0xc6,
	0x13, 0x16, 0x85, 0x51, 0x10, 0x33, 0xa7, 0x5c, 0x04, 0xce, 0x00, 0x48, 0x07, 0xec, 0x33, 0xca,
	0xcf, 0xbd, 0x1e, 0xf5, 0x13, 0x11, 0x39, 0x95, 0x42, 0xbc, 0x44, 0x1c, 0x21, 0x80, 0x3c, 0x04,
	0x50, 0x4e, 0x76, 0x69, 0x42, 0x9d, 0x2a, 0xc2, 0xd7, 0x0d, 0x1c, 0xef, 0x71, 0x24, 0xa2, 0xe1,
	0x01, 0x4d, 0xa8, 0x6b, 0x21, 0x50, 0x7e, 0x92, 0x87, 0xd0, 0x08, 0xf8, 0x3b, 0x11, 0xf8, 0x2c,
	0x76, 0x6a, 0xb7, 0xcb, 0xdb, 0xf6, 0xae, 0x63, 0x6c, 0xc6, 0x41, 0x38, 0x56, 0x00, 0x77, 0x8c,
	0x24, 0x4f, 0x61, 0x55, 0x9d, 0xd5, 0x0b, 0x06, 0x2c, 0xf6, 0x18, 0xf7, 0xa3, 0xab, 0x30, 0x71,
	0xea, 0xb8, 0x01, 0x31, 0x1b, 0xbc, 0xc0, 0x34, 0x1e, 0x05, 0x03, 0xe6, 0xae, 0x20, 0x5c, 0x7e,
	0xc6, 0x87, 0x0a, 0x4c, 0xf6, 0x41, 0x09, 0xbd, 0xa1, 0xe0, 0xec, 0xca, 0xf3, 0xc5, 0x88, 0x27,
	0x4e, 0x03, 0xdd, 0xbe, 0x91, 0x73, 0xfb, 0xa5, 0xd4, 0xef, 0x4b, 0xb5, 0xdb, 0x12, 0x79, 0x01,
	0x79, 0x04, 0x8b, 0x6a, 0x93, 0x38, 0xa1, 0xc9, 0x28, 0x76, 0x2c, 0xb4, 0x5f, 0xcd, 0xd9, 0xff,
	0x80, 0x2a, 0xd7, 0x16, 0xe9, 0x02, 0xed, 0x42, 0x16, 0xd1, 0x84, 0x79, 0x01, 0xef, 0x09, 0x07,
	0x26, 0xec, 0x94, 0xee, 0x98, 0xf7, 0x84, 0x6b, 0x8b, 0x74, 0xd1, 0xfe, 0xa5, 0x0c, 0xcd, 0x5c,
	0x2c, 0xc9, 0x5d, 0x68, 0xb2, 0xcb, 0x90, 0xf9, 0x89, 0x47, 0x87, 0x78, 0x05, 0x59, 0x20, 0x65,
	0x77, 0x51, 0x09, 0xf7, 0x50, 0x46, 0xee, 0xc1, 0xf2, 0xb8, 0xf2, 0xbc, 0x90, 0x45, 0x81, 0xe8,
	0x62, 0xb5, 0x54, 0xdd, 0xd6, 0x58, 0x7e, 0x8a, 0x62, 0xf2, 0x1c, 0x56, 0xf5, 0x7e, 0xec, 0x32,
	0x0c, 0x22, 0xd6, 0xf5, 0x64, 0x85, 0xeb, 0x72, 0xd9, 0xec, 0xa8, 0xf2, 0xef, 0x98, 0xf2, 0xef,
	0xbc, 0x36, 0xe5, 0xef, 0xae, 0x28, 0xb3, 0x43, 0x65, 0x25, 0xe5, 0xf2, 0x58, 0xac, 0xf0, 0x68,
	0xc8, 0xba, 0xc6, 0xbd, 0x0a, 0xba, 0xd7, 0x1a, 0xcb, 0xb5, 0x87, 0xa7, 0xb0, 0x91, 0x42, 0x73,
	0x27, 0x57, 0x67, 0x9e, 0xbc, 0x36, 0xb6, 0xcc, 0x1e, 0xbe, 0x05, 0x4b, 0xe9, 0x8e, 0x32, 0x80,
	0x4e, 0x0d, 0x8f, 0x6e, 0x8e, 0xa5, 0x2e, 0x4d, 0x18, 0x79, 0x00, 0x76, 0xa6, 0x94, 0xae, 0x29,
	0x21, 0x48, 0x4b, 0xa8, 0xfd, 0x4f, 0x19, 0x96, 0x27, 0xcb, 0x93, 0xdc, 0x83, 0xba, 0x2e, 0x50,
	0xcc, 0x81, 0xbd, 0xdb, 0x32, 0xbb, 0x98, 0x02, 0x36, 0xfa, 0xe9, 0xa4, 0x95, 0x0a, 0x92, 0x96,
	0x5e, 0xc0, 0xa0, 0xca, 0xb9, 0x0b, 0x68, 0xd8, 0x1d, 0x58, 0x34, 0x30, 0xbc, 0xa5, 0x0a, 0xb0,
	0xad, 0x65, 0x78, 0xc7, 0x83, 0x71, 0x1e, 0xbc, 0x90, 0x5e, 0xcd, 0x1b, 0x56, 0x73, 0xfa, 0x29,
	0xbd, 0xc2, 0x80, 0x3e, 0x87, 0xd5, 0xf1, 0x41, 0x2c, 0x19, 0x45, 0x5c, 0x6d, 0x54, 0x9b, 0x5d,
	0x19, 0xc6, 0x17, 0xb4, 0xc2, 0xbd, 0x32, 0x1e, 0x31, 0xae, 0x13, 0x5d, 0x9f, 0xdb, 0xa3, 0x43,
	0xae, 0x52, 0x7c, 0x1f, 0x56, 0xb2, 0x57, 0xf7, 0xba, 0x2c, 0xf6, 0xb1, 0x85, 0xad, 0x71, 0x81,
	0xc9, 0xfb, 0x1f, 0xb0, 0xd8, 0x27, 0x8f, 0xc1, 0x31, 0xd8, 0x51, 0xd4, 0x67, 0xe6, 0x0a, 0x68,
	0x62, 0xa1, 0xc9, 0xba, 0xd6, 0xbf, 0x89, 0xfa, 0x4c, 0xb9, 0x2a, 0x0d, 0xdb, 0x7f, 0x97, 0xa0,
	0x6e, 0x52, 0xfc, 0x05, 0x80, 0x4e, 0x61, 0x3a, 0x8a, 0x2d, 0x2d, 0x39, 0x11, 0x32, 0x63, 0x46,
	0x9d, 0xcb, 0x6b, 0x53, 0x4b, 0x75, 0xc6, 0x9e, 0xc0, 0xa2, 0x81, 0xcd, 0xd9, 0x5b, 0xb6, 0xc6,
	0xeb, 0xae, 0x4a, 0x47, 0x7e, 0xe5, 0x63, 0x46, 0x7e, 0x75, 0xd6, 0xc8, 0xdf, 0x80, 0x5a, 0xc4,
	0x86, 0x34, 0x3a, 0xc7, 0xa4, 0x5a, 0xae, 0x5e, 0x91, 0x6d, 0xa8, 0x72, 0x91, 0x5c, 0xdb, 0x1d,
	0x0a, 0x30, 0x35, 0xd7, 0x1a, 0x73, 0xce, 0xb5, 0x7f, 0x4b, 0xd0, 0x9a, 0x18, 0xb6, 0xe4, 0x2b,
	0x68, 0x71, 0xc6, 0xba, 0x58, 0xb2, 0xb9, 0xd9, 0xd6, 0x94, 0xe2, 0x53, 0x7a, 0xa5, 0xc3, 0xf9,
	0x35, 0xb4, 0x64, 0xdf, 0xf0, 0x98, 0xc5, 0xf9, 0xb0, 0x2f, 0x19, 0xb1, 0x06, 0xde, 0x85, 0x66,
	0xc0, 0x7d, 0x31, 0x64, 0xf9, 0x7e, 0x5a, 0x54, 0x42, 0x0d, 0x7a, 0x0c, 0x8e, 0x39, 0xf5, 0x8c,
	0xfa, 0xe7, 0xde, 0x40, 0x50, 0x9e, 0x9f, 0x5d, 0xeb, 0xfa, 0x78, 0xa9, 0x7e, 0x21, 0x28, 0xd7,
	0x86, 0x8f, 0xe0, 0x86, 0xb1, 0x99, 0x74, 0xa7, 0xaa, 0xec, 0xb4, 0xfa, 0x30, 0xef, 0xd5, 0x2e,
	0x18, 0x85, 0x97, 0xf7, 0x4e, 0x8d, 0xab, 0x55, 0xad, 0x3c, 0xce, 0x3a, 0xf9, 0x0a, 0x56, 0x93,
	0x88, 0xf2, 0x98, 0xfa, 0x92, 0x38, 0x78, 0x5d, 0x96, 0xd0, 0x60, 0x60, 0xd2, 0xf3, 0x65, 0xee,
	0xf5, 0x79, 0x9d, 0xe2, 0x0e, 0x10, 0xe6, 0x92, 0x64, 0x52, 0x14, 0xb7, 0xff, 0xa8, 0xc0, 0x46,
	0x31, 0x5c, 0x96, 0x9b, 0xb9, 0x8f, 0x9e, 0x6b, 0x93, 0xe5, 0x66, 0xd4, 0xf3, 0x67, 0x62, 0x0f,
	0x96, 0x53, 0xa0, 0xef, 0x8f, 0x93, 0x61, 0xef, 0x6e, 0xa4, 0xce, 0xf7, 0x9f, 0x52, 0x7e, 0xbe,
	0xa7, 0xb4, 0xee, 0x78, 0x63, 0x2d, 0x20, 0x5b, 0x50, 0x53, 0xe1, 0x2a, 0xee, 0x01, 0xad, 0x24,
	0x4f, 0x64, 0x4b, 0xaa, 0xa8, 0xea, 0x73, 0x6a, 0xd7, 0x9e, 0xa3, 0x2b, 0xc4, 0x9c, 0xf2, 0x0d,
	0xac, 0x24, 0x69, 0x9c, 0x75, 0x73, 0xd4, 0xb1, 0x39, 0x96, 0x53, 0x85, 0xab, 0xda, 0xe4, 0x09,
	0x64, 0x64, 0x9e, 0xea, 0x98, 0xc6, 0x07, 0x3b, 0xa6, 0x95, 0x62, 0x4f, 0xb0, 0x77, 0xf6, 0x21,
	0x23, 0x52, 0x93, 0xc1, 0x9a, 0x3d, 0x12, 0x53, 0x13, 0x1c, 0x0e, 0xa6, 0xc6, 0x3d, 0x3d, 0xcc,
	0x90, 0x59, 0x34, 0x74, 0x8d, 0xef, 0x2b, 0xd9, 0x54, 0x97, 0xda, 0x73, 0x76, 0xe9, 0x6f, 0x25,
	0xb0, 0x33, 0x94, 0x46, 0x0e, 0x32, 0x7f, 0x14, 0x45, 0x8c, 0x27, 0x5e, 0x9c, 0xb0, 0x50, 0x97,
	0xc7, 0xe6, 0x14, 0x81, 0xd3, 0x36, 0x2c, 0x74, 0x6d, 0x8d, 0x97, 0x0b, 0xf2, 0x3d, 0xd8, 0xfe,
	0x5b, 0xe6, 0x9f, 0x23, 0x63, 0x8c, 0x9d, 0x12, 0x86, 0x6a, 0x73, 0x82, 0x3b, 0xb1, 0x70, 0x5f,
	0x62, 0x90, 0x37, 0x82, 0x6f, 0x3e, 0x63, 0x7c, 0x41, 0xd0, 0xb8, 0x37, 0x10, 0x17, 0x78, 0x8d,
	0xd8, 0x29, 0x17, 0xec, 0x80, 0xd6, 0x47, 0x03, 0x71, 0x81, 0xd7, 0x59, 0xf2, 0xb3, 0x4b, 0xbc,
	0x81, 0xf4, 0xdc, 0x7b, 0x1b, 0xc4, 0x89, 0x88, 0xae, 0x9c, 0x6a, 0x7e, 0x87, 0xa2, 0x1b, 0x48,
	0xfc, 0x33, 0x05, 0x6f, 0xff, 0x55, 0x86, 0xa6, 0xac, 0x1e, 0x39, 0x06, 0x66, 0x52, 0xf5, 0x09,
	0x42, 0x5d, 0x9a, 0x45, 0xa8, 0xef, 0x83, 0x85, 0x78, 0x4c, 0x51, 0x21, 0x5d, 0x6f, 0x48, 0xbd,
	0xbc, 0xc8, 0x04, 0xf9, 0xae, 0xcc, 0x49, 0xbe, 0x5f, 0xc3, 0x8d, 0x94, 0x16, 0x2a, 0xfb, 0x88,
	0xbd, 0x0b, 0xd8, 0x45, 0xac, 0x03, 0xf1, 0x79, 0x71, 0x20, 0x5c, 0x04, 0xb9, 0xeb, 0xbd, 0x02,
	0x69, 0x5c, 0x4c, 0xac, 0x6b, 0x9f, 0x48, 0xac, 0xeb, 0xff, 0x93, 0x58, 0xcf, 0xfb, 0x00, 0xfd,
	0x59, 0x81, 0xb5, 0xa2, 0x4b, 0x5e, 0x97, 0xd0, 0x3b, 0xc6, 0xc7, 0xdc, 0xac, 0x53, 0xee, 0x5c,
	0x43, 0xbc, 0xcb, 0xc5, 0xc4, 0xfb, 0x19, 0x10, 0xb5, 0x5b, 0x8e, 0xfd, 0x56, 0x66, 0x4e, 0x80,
	0x65, 0xb4, 0xca, 0x32, 0xdf, 0x29, 0x76, 0x59, 0x2d, 0x60, 0x97, 0xb7, 0xc0, 0xd6, 0xa0, 0x0c,
	0x37, 0x06, 0x25, 0x42, 0xd2, 0x38, 0x4d, 0x3f, 0xeb, 0xf3, 0xd0, 0xcf, 0xc6, 0x34, 0xfd, 0xcc,
	0x12, 0x16, 0xeb, 0x63, 0x08, 0x0b, 0x7c, 0xe4, 0xff, 0xa8, 0xf6, 0xac, 0x96, 0x7a, 0x01, 0x6b,
	0x63, 0xda, 0x99, 0x8d, 0xf2, 0xe2, 0xcc, 0x28, 0x13, 0x43, 0x3d, 0xd3, 0x38, 0xb7, 0x7f, 0x5f,
	0x00, 0x32, 0x3d, 0x63, 0xc8, 0x77, 0xa6, 0x17, 0xe7, 0x9c, 0x89, 0x96, 0x30, 0x9f, 0x13, 0x43,
	0xcd, 0x8c, 0xc5, 0x85, 0x0f, 0x0f, 0x35, 0xec, 0xe8, 0x74, 0xa8, 0xe1, 0x68, 0x6c, 0xbf, 0x2f,
	0x4d, 0xfa, 0x85, 0xdd, 0x7e, 0x1f, 0x2c, 0xb5, 0x39, 0x0d, 0xc3, 0x0f, 0xbc, 0xe4, 0xa8, 0xdf,
	0x0b, 0x43, 0xc9, 0xbd, 0x14, 0x76, 0x14, 0xcb, 0xd2, 0xa7, 0x43, 0x86, 0x7e, 0x58, 0x6e, 0x13,
	0xc5, 0x6f, 0x62, 0x16, 0x9d, 0x50, 0xcd, 0xc0, 0x53, 0xdc, 0x50, 0x9c, 0x05, 0x03, 0xc5, 0x67,
	0x25, 0x03, 0x37, 0xc8, 0x97, 0x28, 0x96, 0x71, 0x51, 0xd8, 0x39, 0x0b, 0x5b, 0x79, 0x8b, 0x15,
	0x7d, 0x13, 0x94, 0x6b, 0x5e, 0x10, 0x62, 0x31, 0x5b, 0x6e, 0x1d, 0xd7, 0xc7, 0xa1, 0xe4, 0xac,
	0x7a, 0x44, 0x68, 0xce, 0xaa, 0x56, 0x19, 0x2e, 0x5b, 0xcf, 0x72, 0xd9, 0xf6, 0xaf, 0x26, 0x69,
	0xb9, 0xa7, 0xe5, 0x53, 0x9f, 0xb2, 0xdd, 0xa2, 0xa7, 0x6c, 0xc5, 0x58, 0x17, 0xbe, 0x60, 0xed,
	0x9f, 0xc0, 0x4a, 0xcf, 0xbf, 0x05, 0x65, 0x11, 0xf5, 0x8b, 0xd3, 0x22, 0x35, 0x64, 0x0d, 0xaa,
	0x49, 0x90, 0x0c, 0x4c, 0x1e, 0xd4, 0x42, 0x4a, 0xdf, 0xd1, 0xc1, 0xc8, 0xc4, 0x5c, 0x2d, 0x9e,
	0x9e, 0xc0, 0x96, 0x2f, 0x86, 0x9d, 0xcb, 0x80, 0xf2, 0x3e, 0xa7, 0x9d, 0x8b, 0x8b, 0x0b, 0xb3,
	0x61, 0xfe, 0xf7, 0xa7, 0x9f, 0xb7, 0xfa, 0x41, 0xf2, 0x76, 0x74, 0xd6, 0xf1, 0xc5, 0x70, 0xe7,
	0x92, 0xfb, 0xbe, 0xfa, 0x59, 0x2b, 0xde, 0xc9, 0xc3, 0xce, 0xd4, 0x8f, 0x5f, 0x0f, 0xfe, 0x0b,
	0x00, 0x00, 0xff, 0xff, 0x4e, 0x56, 0x2e, 0xdc, 0x28, 0x13, 0x00, 0x00,
}
